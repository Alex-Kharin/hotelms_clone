{"version":3,"sources":["settings/settings.js","components/Table/TodayMarker.jsx","components/simpleElements/Icon.jsx","components/simpleElements/Button.jsx","components/Table/Table-cell/MonthCell.jsx","components/Table/utils/utils.js","components/Table/Rent.jsx","components/Modal/withModal.jsx","components/Forms/SaveCloseButtons.jsx","components/Forms/OrderCreationForm.jsx","commonUtils/commonUtils.js","components/Table/Table-cell/TableCell.jsx","components/Table/TableRow.jsx","components/Table/Table-cell/DatePicker.jsx","components/Table/Table-cell/FirstHeaderCell.jsx","components/Table/TableHeader.jsx","components/Table/TableBody.jsx","store/tableApartmentsReducer.jsx","store/tableBodyContainerSelectors.js","components/Table/TableBodyContainer.jsx","components/Table/Table.jsx","store/tableReducer.js","store/tableContainerSelectors.js","components/Table/TableContainer.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Header/MenuItem.jsx","components/Forms/TableSettingsForm.jsx","components/Forms/CommonSettingsForm.jsx","components/Header/Reports.jsx","components/Header/Header.jsx","store/headerContainerSelector.js","components/Header/HeaderContainer.jsx","App.js","reportWebVitals.js","store/store.js","index.js","components/Modal/SettingsMenuItem.module.css"],"names":["borderWidth","border","borderMix","borderStyle","borderColor","displayFlexAlignCenter","todayMarkerZIndex","rentElementsZIndex","btnHeaderZIndex","weekendColor","btnColor","menuItemColor","secondaryColor","MainBgColor","selectionColor","rentElementColor","gridColumnsWidth","gridAutoRowsHeight","gridTemplateFirstColumnWidth","time","hours","minutes","seconds","milliseconds","tariffs","standard_2","standard_3","comfortable_2","comfortable_3","lux_5","maxAdditionalPersons","priceAdditionalPerson","currentCurrency","Circle","styled","div","VerticalLine","TodayMarker","CommonIcon","className","children","Icon","size","Btn","button","background","isFlex","type","Button","props","onClick","iconName","Months","daysInCurrentMonth","position","MonthCellTitle","strong","MonthCell","leftBtn","monthName","yearOfDate","rightBtn","dayOfMonth","day","format","locale","ru","dayOfWeek","month","dateToString","date","getTime","isDayBefore","day1","day2","startOfDay","setTimeToDate","split","set","adjustsInterval","interval","end","start","isSelectInterval","apartmentIdForSelect","currentId","isWithinInterval","shifterViewedRentIntervals","state","action","rangeBorder","shiftFunction","viewRentIntervals","apartmentId","index","isArrow","apartmentsByType","id","rangeInterval","rentInfo","rentInterval","RentWrapper","attrs","forTooltip","undefined","cellDimensions","viewRentInterval","width","intervalToDuration","days","height","Arrow","FullName","Tag","top","bottom","left","right","Ul","ul","TooltipSpan","span","withModal","WrappedComponent","useState","isOpenModal","showModal","setShowModal","closeModal","hasOwnProperty","setIsOpenModal","openModal","isOpen","contentLabel","style","Modal","overlayClassName","Overlay","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","React","Children","map","child","isValidElement","cloneElement","setAppElement","ButtonsWrapper","SaveCloseButtons","closeHandler","notSave","LikeFormField","ErrorMessageElement","TitleWrapper","Delete","message","OrderCreationForm","setRentInfo","apartmentsType","numberOfPersons","cancelRent","personInfo","firstName","lastName","email","phone","additionalPersons","persons","tariff","percentageDiscount","moneyDiscount","price","comment","tariffPrice","initialValues","checkInTime","checkOutTime","checkIn","nights","checkOut","validationSchema","Yup","max","required","matches","test","value","parseFloat","onSubmit","values","obj","newRentInfo","Object","keys","reduce","acc","objKey","Math","round","random","htmlFor","name","autoFocus","component","readOnly","title","min","as","Array","num","InfoFormField","fieldName","isAdditionalPersons","PriceField","rows","cols","field","useFormikContext","personsAddsSum","propsAll","setFieldValue","useField","meta","useEffect","Number","toFixed","getPrice","moneyDiscountCalc","touched","error","CellWrapper","isSelect","isWeekend","TopString","topStringFontWeight","BottomString","bottomStringFontWeight","ModalRent","isLeftArrow","isRightArrow","place","effect","TableCell","isToday","isRent","topString","bottomString","TableRow","firstCell","rowTitle","rowCells","WEEKDAYS_SHORT","MONTHS","WEEKDAYS_LONG","FIRST_DAY_OF_WEEK","LABELS","nextMonth","previousMonth","parseDate","str","parsed","dateFnsParse","Date","DateUtils","isDate","formatDate","dateFnsFormat","DatePicker","selectedDay","fromDay","isEmpty","setState","FORMAT","dayPickerProps","todayButton","months","weekdaysLong","weekdaysShort","firstDayOfWeek","labels","placeholder","keepFocus","inputProps","onDayChange","modifiers","dayPickerInput","input","getInput","trim","onDayPickerHide","shiftFrom","handleDayPickerHide","Wrapper","DateChoiceWrapper","ColumnTitle","FirstHeaderCell","TableHeader","shiftLeft","shiftDateIntervalLeft","shiftRight","shiftDateIntervalRight","shiftNow","shiftDateIntervalNow","shiftDateIntervalFrom","eachMonthOfInterval","headerDaysCells","monthsCells","isAfter","startOfMonth","endOfMonth","differenceInCalendarDays","firstMonth","lastMonth","length","toMonths","Cell","weight","ApartmentsRowsByNumbers","selectInterval","leftSideShiftLeftViewRentInterval","leftSideShiftRightViewRentInterval","rightSideShiftLeftViewRentInterval","rightSideShiftRightViewRentInterval","bodyDaysCells","array","i","isSameDay","isDayStartRentalInterval","forEach","apartmentRentInterval","firstTableDay","lastTableDay","sort","a","b","Fragment","apartmentsNumber","apartments","key","object","IS_SELECT","START_SELECTION_INTERVAL","END_SELECTION_INTERVAL","CLEAR_SELECTED_DAYS","APARTMENT_ID","CELL_DIMENSIONS","RENT_INTERVAL","LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL","LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL","RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL","RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL","RENT_INFO","OPEN_MODAL","CANCEL_RENT","initialState","standard","addDays","comfortable","lux","apartmentType","apartment","arr","itemRentInfo","push","itemObj","convertArrayOfObjectsToObjectOfObjects","getApartments","tableApartments","getViewRentIntervals","getCellDimensions","getTariffs","getIsOpenModal","mapDispatchToProps","TableBodyContainer","connect","ownProps","freeApartments","some","item","areIntervalsOverlapping","inclusive","element","TableWrapper","daysInTable","SHIFT_LEFT","SHIFT_RIGHT","SHIFT_NOW","SHIFT_FROM","DAYS_IN_TABLE","from","to","getInterval","table","getDaysInTable","getIsSelect","getApartmentId","getSelectInterval","createSelector","eachDayOfInterval","FromDay","setSelecting","setStartSelection","startSelection","setEndSelection","endSelection","setApartmentId","clearSelectedDays","setCellDimensions","setRentInterval","TableContainer","handleSelect","event","target","closest","dayStr","dataset","apartment_id","apartments_type","onMouseDown","onMouseUp","onMouseOver","MainWrapper","main","Main","FooterWrapper","footer","Footer","MenuItemWrapper","MenuItemIcon","MenuItemTitle","MenuItem","menuItemTitle","TableSettingsForm","changeDaysInTable","SettingsExample","settings","CommonSettingsForm","includes","Report","updateCharts","bind","optionsMixedChart","chart","toolbar","show","plotOptions","bar","columnWidth","stroke","xaxis","categories","markers","strokeWidth","fillOpacity","strokeOpacity","hover","yaxis","tickAmount","seriesMixedChart","data","optionsRadial","radialBar","startAngle","endAngle","hollow","margin","image","imageOffsetX","imageOffsetY","dropShadow","enabled","blur","opacity","track","dataLabels","showOn","offsetY","color","fontSize","formatter","val","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","lineCap","seriesRadial","optionsBar","stacked","stackType","horizontal","axisBorder","axisTicks","legend","horizontalAlign","seriesBar","newMixedSeries","newBarSeries","this","s","floor","textAlign","options","series","Component","HeaderWrapper","header","LeftSideMenu","TableSettingsMenuItem","HeaderContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","subDays","filter","_","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eb25878f.chunk.js","sourcesContent":["// Common\nexport const borderWidth = 1\nexport const border = `${borderWidth}px solid black`\n\nexport function borderMix(borderWidth='1px',\n                          borderStyle='solid',\n                          borderColor='black') {\n    return `${borderWidth} ${borderStyle} ${borderColor}`\n}\n\nexport const displayFlexAlignCenter = 'display: flex; align-items: center'\n\n\n// Z-indexes:\nexport const todayMarkerZIndex = 500\nexport const rentElementsZIndex = 450\nexport const btnHeaderZIndex = 505\n// 1000 - modal in src/components/Modal/SettingsMenuItem.module.css\n\n// Colors\nexport const weekendColor = 'lightblue'\nexport const btnColor = '#0277bd'\nexport const menuItemColor = '#9feaab'\nexport const secondaryColor = 'lightseagreen'\nexport const MainBgColor = '#d5d5d57f'\nexport const selectionColor = '#e2c50a'\nexport const rentElementColor = '#00c0e7'\n\n\n// TableWrapper = styled.div on src/components/Table/Table.jsx\nexport const gridColumnsWidth = 50\nexport const gridAutoRowsHeight = 40\nexport const gridTemplateFirstColumnWidth = '250px'\n\n\n// **************************************************************** //\nexport const time = {hours:12, minutes:0, seconds:0, milliseconds:0}\n\n// it should be a flat structure\nexport const tariffs = {\n    standard_2: 1000,\n    standard_3: 1500,\n    comfortable_2: 2000,\n    comfortable_3: 2500,\n    lux_5: 5000\n}\nexport const maxAdditionalPersons = 6\nexport const priceAdditionalPerson = 500\nexport const currentCurrency = 'руб'\n","import React from 'react'\nimport styled from 'styled-components'\nimport {todayMarkerZIndex} from '../../settings/settings'\n\n\nconst Circle = styled.div`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: crimson;\n  top: -30%;\n  right: 5%;\n  z-index: ${todayMarkerZIndex};\n`\n\nconst VerticalLine = styled.div`\n  position: absolute;\n  height: 75vh;\n  border-left: 2px solid crimson;\n  top: 0;\n  right: 19%;\n  z-index: ${todayMarkerZIndex};\n`\n\nexport function TodayMarker() {\n    return (\n    <>\n        <Circle/>\n        <VerticalLine/>\n    </>)\n}","import styled from 'styled-components'\nimport React from 'react'\n\nexport const CommonIcon = ({ className, children }) => (\n    <span className={'material-icons ' + className}>\n    {children}\n  </span>\n)\n\nexport const Icon = styled(CommonIcon)`\n  font-size: ${({size}) => size}px;\n`","import React from \"react\"\nimport styled from \"styled-components\";\nimport {btnColor, btnHeaderZIndex, gridAutoRowsHeight} from '../../settings/settings'\nimport {CommonIcon} from './Icon'\n\n\nconst Btn = styled.button`\n  font-size: ${({size}) => size || '1.2em'};\n  background-color: ${({background}) => background || btnColor};\n  border-radius: 3px;\n  min-height: 30px;\n  min-width: ${gridAutoRowsHeight};\n  display: ${({isFlex}) => isFlex && 'flex'};\n  align-items: ${({isFlex}) => isFlex && 'center'};\n  z-index: ${({isFlex}) => isFlex && btnHeaderZIndex};\n  type: ${({type}) => type};\n  color: white;\n`\n\nexport function Button(props) {\n    const { onClick, size, isFlex, iconName, children, type, background} = props\n\n    return (\n        <Btn onClick={onClick} size={size} isFlex={isFlex} type={type} background={background}>\n            {iconName && <CommonIcon>{iconName}</CommonIcon>}\n            <span>{children}</span>\n        </Btn>\n    )\n}","import styled from 'styled-components'\nimport React from 'react'\nimport {border, displayFlexAlignCenter} from '../../../settings/settings'\n\n\nconst Months = styled.div`\n  grid-column: span ${props => props.daysInCurrentMonth};\n  border: ${border};\n  ${displayFlexAlignCenter};\n  justify-content: ${props => props.daysInCurrentMonth > 3 ? 'space-between' : props.position};\n  padding: 0 5px;\n`\n\nconst MonthCellTitle = styled.strong`\n  margin: auto 45px;\n`\n\nexport function MonthCell(props) {\n    const {daysInCurrentMonth, position, leftBtn, monthName, yearOfDate, rightBtn} = props\n\n    return (\n        <Months daysInCurrentMonth = {daysInCurrentMonth} position={position}>\n            {leftBtn} {daysInCurrentMonth > 3 && <MonthCellTitle>{monthName} {yearOfDate}</MonthCellTitle>} {rightBtn}\n        </Months>\n    )\n}","import {\n    differenceInCalendarDays,\n    endOfMonth,\n    format,\n    intervalToDuration,\n    isAfter,\n    isSameDay,\n    isWithinInterval,\n    startOfMonth,\n    set, startOfDay,\n} from 'date-fns'\nimport {ru} from 'date-fns/locale'\nimport {Button} from '../../simpleElements/Button'\nimport React from 'react'\nimport {MonthCell} from '../Table-cell/MonthCell'\nimport {borderWidth} from '../../../settings/settings'\n\n\nconst dayOfMonth = (day) => format(day, 'dd', {locale: ru})\nconst dayOfWeek = (day) => format(day, 'eeeeee', {locale: ru})\nconst monthName = (month) => format(month, 'LLLL', {locale: ru})\nconst yearOfDate = (date) => format(date, 'y', {locale: ru})\nconst dateToString = (date) => format(date, 'dd-MM-y', {locale: ru})\nconst getTime = (date) => format(date, 'HH:mm', {locale: ru})\nconst isDayBefore = (day1, day2) => startOfDay(day1) < startOfDay(day2)\nconst setTimeToDate = (date, time) => {\n    const [hours, minutes] = time.split(':')\n    return  set(date, {hours, minutes})\n}\n\nfunction toMonths(interval, months, shiftLeft, shiftRight) {\n    return function (month) {\n        const start = isAfter(interval.start, startOfMonth(month)) ? interval.start : startOfMonth(month)\n        const end = isAfter(endOfMonth(month), interval.end) ? interval.end : endOfMonth(month)\n\n        const daysInCurrentMonth = differenceInCalendarDays(end, start) + 1\n\n        const firstMonth = months[0]\n        const lastMonth = months[months.length - 1]\n        let position = ''\n\n        const leftBtn = month === firstMonth ? (position = 'flex-start', <Button iconName={'keyboard_arrow_left'}\n                                                                                 onClick={shiftLeft} isFlex/>) : null\n        const rightBtn = month === lastMonth ? (position = 'flex-end', <Button iconName={'keyboard_arrow_right'}\n                                                                               onClick={shiftRight} isFlex/>) : null\n\n        return <MonthCell daysInCurrentMonth={daysInCurrentMonth}\n                          leftBtn={leftBtn}\n                          rightBtn={rightBtn}\n                          monthName={monthName(month)}\n                          yearOfDate={yearOfDate(month)}\n                          position={position}\n                          key={month}\n        />\n    }\n}\n\nfunction adjustsInterval(interval) {\n    return isDayBefore(interval.end, interval.start)\n        ? {start: interval.end, end: interval.start}\n        : interval\n}\n\nfunction isSelectInterval(interval, day, apartmentIdForSelect, currentId) {\n    return interval.start\n        ? isWithinInterval(day, interval) && apartmentIdForSelect === currentId\n        : false\n}\n\nfunction shifterViewedRentIntervals(state, action, rangeBorder, shiftFunction) {\n    let day = state.viewRentIntervals[action.apartmentId][action.index][rangeBorder]\n    day = shiftFunction(day, 1)\n\n    state = {...state}\n    state.viewRentIntervals = {...state.viewRentIntervals}\n    state.viewRentIntervals[action.apartmentId] = [...state.viewRentIntervals[action.apartmentId]]\n    state.viewRentIntervals[action.apartmentId][action.index] = {\n        ...state.viewRentIntervals[action.apartmentId][action.index],\n        [rangeBorder]: day\n    }\n    return state\n}\n\nfunction isDayStartRentalInterval(array, day) {\n    for (let i=0; i<array?.length; i++) {\n        if (isSameDay(day, array[i].start) && !isSameDay(array[i].start, array[i].end)) {\n            return [array[i], i]\n        }\n    }\n    return false\n}\n\nfunction isArrow(viewRentIntervals, apartmentsByType, id, index, rangeInterval) {\n    return rangeInterval === 'start'\n    ? viewRentIntervals[id] && isDayBefore(apartmentsByType[id]?.rentInfo[index]?.rentInterval.start, viewRentIntervals[id][index]?.start)\n    : viewRentIntervals[id] && isDayBefore(viewRentIntervals[id][index]?.end, apartmentsByType[id]?.rentInfo[index]?.rentInterval.end)\n}\n\n// = width*duration + 2*duration*borderWidth\nfunction widthRentElement(cellDimensions, viewRentInterval) {\n    return cellDimensions.width * intervalToDuration(viewRentInterval).days +\n        intervalToDuration(viewRentInterval).days * 2 * borderWidth + 'px'\n}\n\nexport {\n    dayOfMonth, dayOfWeek, monthName, yearOfDate, dateToString, toMonths, adjustsInterval, isSelectInterval,\n    shifterViewedRentIntervals, isDayStartRentalInterval, isArrow, widthRentElement, getTime, setTimeToDate,\n    isDayBefore,\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {borderMix, currentCurrency, rentElementColor, rentElementsZIndex} from '../../settings/settings'\nimport {dateToString, getTime, widthRentElement} from './utils/utils'\nimport {Icon} from '../simpleElements/Icon'\nimport ReactTooltip from 'react-tooltip'\nimport {intervalToDuration} from 'date-fns'\n\n\nconst RentWrapper = styled.div.attrs(props => ({'data-tip': '', 'data-for': props.forTooltip}))`\n  position: absolute;\n  top: 1px;\n  left: 50%;\n  border: ${borderMix(undefined, undefined, '#0237bd')};\n  background-color: ${rentElementColor};\n  width: ${props => widthRentElement(props.cellDimensions, props.viewRentInterval)};\n  min-width: ${({cellDimensions}) => cellDimensions.width / 2 - 1}px;\n  height: ${({cellDimensions}) => cellDimensions.height - 2}px;\n  z-index: ${rentElementsZIndex};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Arrow = styled(Icon)`\n  position: absolute;\n  top: 5px;\n  ${props => props.position}: -15px;\n  color: red;\n`\n\nconst FullName = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  position: absolute;\n  top: ${props => props.top ?? ''};\n  bottom: ${props => props.bottom ?? ''};\n  left: ${props => props.left ?? ''};\n  right: ${props => props.right ?? ''};\n  background-color: ${props => props.background || 'chocolate'};\n  font-size: 0.7em;\n`\n\nconst Ul = styled.ul`\n  text-align: left;\n  list-style-type: none;\n`\n\nconst TooltipSpan = styled.span`\n  color: #78e556;\n`\n\nexport function Rent(props) {\n    const {openModal, cellDimensions, viewRentInterval, isLeftArrow, isRightArrow, rentInfo} = props\n    const {\n        id,\n        rentInterval,\n        personInfo: {firstName = 'Аноним', lastName = '', email = '', phone = ''} = {},\n        additionalPersons = null,\n        tariff = '',\n        percentageDiscount = 0,\n        moneyDiscount = 0,\n        price = 0,\n        comment=''\n    } = rentInfo\n    return (\n        <>\n            <RentWrapper onClick={openModal} cellDimensions={cellDimensions} viewRentInterval={viewRentInterval} forTooltip={`${id}`}>\n                {isLeftArrow && <Arrow position={'left'}>arrow_left</Arrow>}\n                {isRightArrow && <Arrow position={'right'}>arrow_right</Arrow>}\n                <FullName>{lastName} {firstName}</FullName>\n                <Tag top={0} right={0}>{price}</Tag>\n                <Tag bottom={0} left={0} background={'#2c79dc'}>{getTime(rentInterval.start)}</Tag>\n                <Tag bottom={0} right={0} background={'#2c79dc'}>{getTime(rentInterval.end)}</Tag>\n            </RentWrapper>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" id={`${id}`}>\n                <Ul>\n                    <li>Заказ №<TooltipSpan>{id}</TooltipSpan></li>\n                    <li>Заезд: <TooltipSpan>{dateToString(rentInterval.start)}</TooltipSpan> в <TooltipSpan>{getTime(rentInterval.start)}</TooltipSpan></li>\n                    <li>Выезд: <TooltipSpan>{dateToString(rentInterval.end)}</TooltipSpan> в <TooltipSpan>{getTime(rentInterval.end)}</TooltipSpan></li>\n                    <li>Ночей: <TooltipSpan>{intervalToDuration(rentInterval).days}</TooltipSpan></li>\n                    {lastName && firstName && <li>Гость: <TooltipSpan>{lastName} {firstName}</TooltipSpan></li>}\n                    {email && <li>Email: <TooltipSpan>{email}</TooltipSpan></li>}\n                    {phone && <li>Тел.: <TooltipSpan>{phone}</TooltipSpan></li>}\n                    {!!additionalPersons && <li>Дополнительно чел.: <TooltipSpan>{additionalPersons}</TooltipSpan></li>}\n                    {tariff && <li>Тарифф: <TooltipSpan>{tariff}</TooltipSpan></li>}\n                    {!!(percentageDiscount || moneyDiscount) && <li>Скидка: <TooltipSpan>{percentageDiscount}% ({moneyDiscount} {currentCurrency}.)</TooltipSpan></li>}\n                    {!!price && <li>Сумма: <TooltipSpan>{price} {currentCurrency}.</TooltipSpan></li>}\n                    {comment && <li>Комментарий: <TooltipSpan>{comment}</TooltipSpan></li>}\n                </Ul>\n            </ReactTooltip>\n        </>\n    )\n}","import Modal from 'react-modal'\nimport React, {useState} from 'react'\nimport style from './SettingsMenuItem.module.css'\n\n\nModal.setAppElement('#root')\n\nexport function withModal(WrappedComponent) {\n    return (props) => {\n        let [showModal, setShowModal] = useState(props.isOpenModal || false)\n        const openModal = () => setShowModal(true)\n        const closeModal = () => {\n            setShowModal(false)\n            if (props.hasOwnProperty('setIsOpenModal')) props.setIsOpenModal(false)\n        }\n\n        return (\n            <>\n                <WrappedComponent openModal={openModal} {...props} />\n                <Modal isOpen={showModal}\n                       contentLabel={'settings'}\n                       className={style.Modal}\n                       overlayClassName={style.Overlay}\n                       onRequestClose={closeModal}\n                       shouldCloseOnOverlayClick={false}\n                       shouldCloseOnEsc={true}\n                >\n                    {React.Children.map(props.children, (child) => {\n                        if (React.isValidElement(child) && typeof(child.type) !== 'string' ) {\n                            return React.cloneElement(child, {closeModal})\n                        }\n                        return child\n                    })}\n                </Modal>\n            </>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '../simpleElements/Button'\n\n\nconst ButtonsWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 5px;\n`\n\nexport function SaveCloseButtons(props) {\n    const {closeHandler, notSave} = props\n\n    return <ButtonsWrapper>\n        {!notSave && <Button type=\"submit\" size={'0.8em'}>Сохранить</Button>}\n        <Button type=\"button\" onClick={closeHandler} size={'0.8em'}> Закрыть </Button>\n    </ButtonsWrapper>\n}","import {ErrorMessage, Field, Form, Formik, useField, useFormikContext} from 'formik'\nimport {SaveCloseButtons} from './SaveCloseButtons'\nimport React, {useEffect} from 'react'\nimport {dateToString, getTime, setTimeToDate} from '../Table/utils/utils'\nimport {intervalToDuration} from 'date-fns'\nimport {Icon} from '../simpleElements/Icon'\nimport {reversObjectProp} from '../../commonUtils/commonUtils'\nimport {currentCurrency, gridAutoRowsHeight, maxAdditionalPersons, priceAdditionalPerson} from '../../settings/settings'\nimport styled from 'styled-components'\nimport {Button} from '../simpleElements/Button'\nimport * as Yup from 'yup'\n\n\nconst LikeFormField = styled.span`\n  border-radius: 3px;\n  border: 1px solid lightgrey;\n  border-left: #43b25a 5px solid;\n  background-color: white;\n  font-size: 1.1em;\n  margin: 1em;\n  text-align: center;\n  padding: 0.2em 0.5em;\n`\n\nconst ErrorMessageElement = styled.div`\ncolor: red;\n`\n\nconst TitleWrapper = styled.div`\n  height: ${gridAutoRowsHeight}px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.2em;\n`\n\nconst Delete = styled.div`\n  float: right;\n\n  &:hover{\n    ::before{\n      content: \"${props => props.message}\";\n      color: red;\n      font-weight: bold;\n    }\n  }\n`\n\nexport function OrderCreationForm(props) {\n    const {\n        closeModal, rentInfo, setRentInfo, index, apartmentsType, apartmentId, tariffs, numberOfPersons, cancelRent,\n    } = props\n    const {\n        id=null,\n        rentInterval,\n        personInfo:{firstName='Аноним', lastName='', email='', phone=''}={},\n        additionalPersons = 0,\n        persons = 1,\n        tariff = '',\n        percentageDiscount = 0,\n        moneyDiscount = 0,\n        price = 0,\n        comment='',\n    } = rentInfo\n\n    const tariffPrice = tariffs[tariff] || tariffs[`${apartmentsType}_${numberOfPersons}`]\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n    return (\n        <Formik\n            initialValues={{\n                firstName, lastName, email, phone, additionalPersons, percentageDiscount, moneyDiscount, persons,\n                comment, price,\n                checkInTime: getTime(rentInterval.start),\n                checkOutTime: getTime(rentInterval.end),\n                tariff: tariffPrice,\n                checkIn: dateToString(rentInterval.start),\n                nights: intervalToDuration(rentInterval).days,\n                checkOut: dateToString(rentInterval.end)\n            }}\n\n            validationSchema={Yup.object({\n                firstName: Yup.string()\n                    .max(15, 'Имя доложно содержать не более 15 символов')\n                    .required('Имя доложно быть обязательно'),\n                lastName: Yup.string()\n                    .max(20, 'Фамилия должна содержать не более 20 символов')\n                    .required('Фамилия должна быть обязательно'),\n                email: Yup.string().email('E-mail не валиден').required('E-mail обязателен'),\n                phone: Yup.string().matches(phoneRegExp, 'Номер не валиден'),\n                price: Yup.string().test('', 'Сумма доложа быть положительной', value => parseFloat(value) >= 0),\n            })}\n\n            onSubmit={(values) => {\n                const newRentInfo ={\n                    rentInterval: {start: setTimeToDate(rentInterval.start, values.checkInTime), end: setTimeToDate(rentInterval.end, values.checkOutTime)},\n                    personInfo:{\n                        firstName: values.firstName,\n                        lastName: values.lastName,\n                        email: values.email,\n                        phone: values.phone\n                    },\n                    additionalPersons: values.additionalPersons,\n                    persons: values.persons,\n                    tariff: reversObjectProp(tariffs)[values.tariff],\n                    percentageDiscount: values.percentageDiscount,\n                    moneyDiscount: values.moneyDiscount,\n                    price: values.price,\n                    comment: values.comment,\n                    id: id || Math.round(Math.random()*100000000), // just for test. It's must deleted when finished transport layer. It's property created on server side. TODO: delete this!!!\n                }\n                setRentInfo(apartmentsType, index, apartmentId, newRentInfo)\n            }}\n        >\n            <Form>\n                <TitleWrapper>\n                    Создание Заказа\n                    <Delete message='Удалить сразу и навсегда! Бесповоротно! БЕЗ ДОПОЛНИТЕЛЬНЫХ ПРЕДУПРЕЖДЕНИЙ!!!'>\n                        <Button iconName={\"delete\"} background={\"red\"} type={\"button\"} onClick={()=>cancelRent(apartmentsType, index, apartmentId)} />\n                    </Delete>\n                </TitleWrapper>\n\n                <label htmlFor=\"firstName\">Имя</label>\n                <Field name=\"firstName\" type=\"text\" autoFocus={true} />\n\n                <label htmlFor=\"lastName\">Фамилия</label>\n                <Field name=\"lastName\" type=\"text\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"firstName\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"lastName\" />\n                <br/>\n                <label htmlFor=\"email\">E-mail</label>\n                <Field name=\"email\" type=\"email\" />\n\n                <label htmlFor=\"phone\">Телефон</label>\n                <Field name=\"phone\" type=\"text\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"email\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"phone\" />\n\n                <hr />\n\n                <label htmlFor=\"checkIn\">Заезд</label>\n                <Field name=\"checkIn\" type=\"text\" readOnly/>\n\n                <label htmlFor=\"checkInTime\" />\n                <Field name=\"checkInTime\" type=\"time\" />\n\n                <label htmlFor=\"nights\">Ночей</label>\n                <Field name=\"nights\" type=\"text\" size=\"4\" readOnly/>\n\n                <label htmlFor=\"checkOut\">Выезд</label>\n                <Field name=\"checkOut\" type=\"text\" readOnly/>\n\n                <label htmlFor=\"checkOutTime\"/>\n                <Field name=\"checkOutTime\" type=\"time\" />\n\n                <hr />\n\n                <label htmlFor=\"persons\" title={`от 1 до ${numberOfPersons}`}>\n                    <Icon>group</Icon>\n                </label>\n                <Field name=\"persons\" type=\"number\" min={1} max={numberOfPersons} title={`от 1 до ${numberOfPersons}`}/>\n\n                <label htmlFor=\"additionalPersons\">\n                    <Icon>group_add</Icon>\n                </label>\n                <Field name=\"additionalPersons\" as=\"select\">\n                    {[...Array(maxAdditionalPersons).keys()].map(num => <option value={num} key={num}>{num}</option> )}\n                </Field>\n                <InfoFormField fieldName={'additionalPersons'} isAdditionalPersons/>\n\n                <hr />\n\n                <label htmlFor=\"tariff\">Тариф</label>\n                <Field name=\"tariff\" as=\"select\">\n                    {Object.keys(tariffs).map(tariff => <option value={tariffs[tariff]} key={tariff}>{tariff}</option>)}\n                </Field>\n                <InfoFormField fieldName={'tariff'} />\n\n                <label htmlFor=\"percentageDiscount\">Скидка %</label>\n                <Field name=\"percentageDiscount\" type=\"number\" min={0} max={100}/>\n\n                <label htmlFor=\"moneyDiscount\">Скидка</label>\n                <Field name=\"moneyDiscount\" type=\"number\" min={0} />\n                <span>{currentCurrency}</span>\n\n                <hr />\n\n                <label htmlFor=\"price\">Сумма</label>\n                <PriceField name=\"price\" type=\"text\" rentInterval={rentInterval} readOnly />\n\n                <hr />\n\n                <label htmlFor=\"comment\">Комментрий :</label>\n                <Field name=\"comment\" as=\"textarea\" rows={5} cols={70}/>\n\n                <SaveCloseButtons closeHandler={closeModal}/>\n            </Form>\n        </Formik>\n    )\n}\n\nfunction InfoFormField(props){\n    const {fieldName, isAdditionalPersons} = props\n    let {values:{[fieldName]: field}, } = useFormikContext()\n    const personsAddsSum = field * priceAdditionalPerson || false\n    return (\n        <>\n            {isAdditionalPersons && personsAddsSum && <>=<LikeFormField>{personsAddsSum} {currentCurrency}</LikeFormField></>}\n            {!isAdditionalPersons && <>=<LikeFormField>{field} {currentCurrency}</LikeFormField></>}\n        </>\n    )\n}\n\nfunction getPrice(days, tariff=0, additionalPersons) {\n    additionalPersons=Number(additionalPersons) || 0\n    tariff=Number(tariff) || 0\n    const price = days * tariff + additionalPersons * priceAdditionalPerson\n\n    return Number(price.toFixed(2))\n}\n\nfunction PriceField(propsAll) {\n    const {rentInterval, name, ...props} = propsAll\n    const {\n        values:{\n            tariff,\n            percentageDiscount,\n            moneyDiscount,\n            additionalPersons,\n        },\n        setFieldValue,\n    } = useFormikContext()\n    const [field, meta] = useField(name)\n\n    useEffect(() => {\n        const price = getPrice(intervalToDuration(rentInterval).days, tariff, additionalPersons)\n        const moneyDiscountCalc = Number((price * percentageDiscount/100).toFixed(2)) || moneyDiscount\n\n        setFieldValue(name, `${price-moneyDiscountCalc} ${currentCurrency}`)\n        setFieldValue('moneyDiscount', moneyDiscountCalc)\n\n    }, [tariff, percentageDiscount, additionalPersons, moneyDiscount, rentInterval, name]);\n\n    return (\n        <>\n            <input {...props} {...field} />\n            {!!meta.touched && !!meta.error && <ErrorMessageElement>{meta.error}</ErrorMessageElement>}\n        </>\n    )\n}","export function convertArrayOfObjectsToObjectOfObjects (key, array) {\n    return array.reduce((acc, itemObj) => {\n        acc[itemObj[key]] = itemObj\n        return acc\n    }, {})\n}\n\nexport function convertObjectWithArraysToObjectWithObjects (key, object) {\n    return Object.keys(object).reduce((acc, objKey) => {\n        acc[objKey] = convertArrayOfObjectsToObjectOfObjects(key, object[objKey])\n        return acc\n    }, {})\n}\n\nexport function reversObjectProp(obj) {\n    return Object.keys(obj).reduce((acc, objKey) => {\n        acc[obj[objKey]] = objKey\n        return acc\n    }, {})\n}\n\nexport function CreateViewRentIntervals(apartments) {\n    return Object.keys(apartments).reduce((acc, apartmentType) => {\n        for (const apartment of apartments[apartmentType]) {\n            let arr=[]\n            for (const itemRentInfo of apartment.rentInfo) {\n                arr.push(itemRentInfo.rentInterval)\n            }\n            if(arr.length) acc[apartment.id] = arr\n        }\n        return acc\n    }, {})\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {TodayMarker} from '../TodayMarker'\nimport {Rent} from '../Rent'\nimport {border, selectionColor, weekendColor} from '../../../settings/settings'\nimport {withModal} from '../../Modal/withModal'\nimport {OrderCreationForm} from '../../Forms/OrderCreationForm'\n\n\nconst CellWrapper = styled.div.attrs(props =>\n    ({'data-date': props.date, 'data-apartment_id': props.apartmentId, 'data-apartments_type': props.apartmentsType}))`\n  position: relative;\n  text-align: center;\n  user-select: none;\n  border: ${props => props.isSelect ? 'none' : border};\n  background-color: ${props => props.isSelect ? selectionColor : props.isWeekend ? weekendColor : 'inherit'};\n  cursor: ${props => props.isSelect ? 'cell' : null};\n`\n\nconst TopString = styled.span`\n  color: midnightblue;\n  font-weight: ${props => props.topStringFontWeight || 'bold'};\n`\n\nconst BottomString = styled.span`\n  color: gray;\n  font-weight: ${props => props.bottomStringFontWeight || 'bold'};\n`\n\nconst ModalRent = withModal(Rent)\n\nexport function TableCell(props) {\n    const {\n        isWeekend, date, apartmentId, isSelect, apartmentsType, isToday, isRent, isLeftArrow, isRightArrow,\n        rentInfo, setRentInfo, index, tariffs, numberOfPersons, isOpenModal, setIsOpenModal, cancelRent,\n    } = props\n\n    const topString = props.topString ? <TopString>{props.topString}</TopString> : null\n    const bottomString = props.bottomString ? <BottomString>{props.bottomString}</BottomString> : null\n\n    return (\n        <CellWrapper\n            isWeekend={isWeekend}\n            date={date}\n            apartmentId={apartmentId}\n            isSelect={isSelect}\n            apartmentsType={apartmentsType}\n        >\n            {isToday && <TodayMarker/>}\n            {isRent &&\n            <ModalRent\n                cellDimensions={props.cellDimensions}\n                viewRentInterval={isRent}\n                isLeftArrow={isLeftArrow}\n                isRightArrow={isRightArrow}\n                rentInfo={rentInfo}\n                isOpenModal={isOpenModal}\n                setIsOpenModal={setIsOpenModal}\n            >\n                <OrderCreationForm\n                    rentInfo={rentInfo}\n                    setRentInfo={setRentInfo}\n                    index={index}\n                    apartmentsType={apartmentsType}\n                    tariffs={tariffs}\n                    apartmentId={apartmentId}\n                    numberOfPersons={numberOfPersons}\n                    cancelRent={cancelRent}\n                />\n            </ModalRent>}\n            {topString}\n            <br/>\n            {bottomString}\n        </CellWrapper>\n    )\n}","import React from 'react'\n\n\nexport function TableRow({rowTitle, rowCells}) {\n    let firstCell\n\n    if (rowTitle) {\n        if (typeof rowTitle === 'object') {\n            firstCell = rowTitle\n        } else {\n            firstCell = <div>{rowTitle}</div>\n        }\n    }\n\n    return (\n        <>\n            {firstCell} {rowCells}\n        </>\n    \n    )\n}","import React, {useState} from 'react'\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport {ru} from 'date-fns/locale'\n\n\nconst WEEKDAYS_SHORT = {\n    ru: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n}\n\nconst MONTHS = {\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n}\n\nconst WEEKDAYS_LONG = {\n    ru: [\n        'Воскресенье',\n        'Понедельник',\n        'Вторник',\n        'Среда',\n        'Четверг',\n        'Пятница',\n        'Суббота',\n    ],\n}\n\nconst FIRST_DAY_OF_WEEK = {\n    ru: 1,\n}\n\nconst LABELS = {\n    ru: { nextMonth: 'следующий месяц', previousMonth: 'предыдущий месяц' },\n}\n\nfunction parseDate(str, format, locale) {\n    const parsed = dateFnsParse(str, format, new Date(), { locale })\n    if (DateUtils.isDate(parsed)) {\n        return parsed\n    }\n    return undefined\n}\n\nfunction formatDate(date, format, locale) {\n    return dateFnsFormat(date, format, { locale })\n}\n\nexport function DatePicker(props) {\n    const [state, setState] = useState({selectedDay: props.fromDay, isEmpty: !props.fromDay})\n\n    function handleDayChange(selectedDay, modifiers, dayPickerInput) {\n        const input = dayPickerInput.getInput();\n        setState({selectedDay, isEmpty: !input.value.trim()})\n    }\n\n    function handleDayPickerHide({selectedDay, isEmpty}, {shiftFrom}) {\n        if (selectedDay && !isEmpty) shiftFrom(selectedDay)\n    }\n\n    const FORMAT = 'dd-MM-yyyy';\n    const locale = 'ru'\n    return (\n            <DayPickerInput\n                dayPickerProps={{\n                    todayButton: 'Сегодня',\n                    locale: ru,\n                    months: MONTHS[locale],\n                    weekdaysLong: WEEKDAYS_LONG[locale],\n                    weekdaysShort: WEEKDAYS_SHORT[locale],\n                    firstDayOfWeek: FIRST_DAY_OF_WEEK[locale],\n                    labels: LABELS[locale],\n                }}\n                formatDate={formatDate}\n                format={FORMAT}\n                parseDate={parseDate}\n                placeholder={`${dateFnsFormat(props.fromDay, FORMAT)}`}\n                selectedDay={props.fromDay}\n                value={props.fromDay}\n                keepFocus={false}\n                inputProps={{name: props.name, type: props.type}}\n                onDayChange={handleDayChange}\n                onDayPickerHide={()=>handleDayPickerHide(state, props)}\n            />\n    )\n}\n","import {Button} from '../../simpleElements/Button'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {DatePicker} from './DatePicker'\nimport {border} from '../../../settings/settings'\n\n\nconst Wrapper = styled.div`\n  grid-row: 1/3;\n  border: ${border};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`\n\nconst DateChoiceWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst ColumnTitle = styled.div`\ntext-align: center;\n`\n\nexport function FirstHeaderCell(props) {\n    const {shiftFrom, fromDay, onClick} = props\n\n    return (\n        <Wrapper>\n            <DateChoiceWrapper>\n                <DatePicker shiftFrom={shiftFrom} fromDay={fromDay}/>\n                <Button iconName={\"schedule\"} onClick={onClick} isFlex/>\n            </DateChoiceWrapper>\n            <ColumnTitle>Номера</ColumnTitle>\n        </Wrapper>\n    )\n}","import React from 'react'\nimport {TableCell} from './Table-cell/TableCell'\nimport {eachMonthOfInterval, isToday, isWeekend} from 'date-fns'\nimport {TableRow} from './TableRow'\nimport {dayOfMonth, dayOfWeek, toMonths} from './utils/utils'\nimport {FirstHeaderCell} from './Table-cell/FirstHeaderCell'\n\n\nexport function TableHeader({interval, days, ...props}) {\n    const shiftLeft = props.shiftDateIntervalLeft\n    const shiftRight = props.shiftDateIntervalRight\n    const shiftNow = props.shiftDateIntervalNow\n    const shiftFrom = props.shiftDateIntervalFrom\n\n    const months = eachMonthOfInterval(interval)\n\n    const headerDaysCells = days.map(day =>\n        <TableCell\n            topString={dayOfMonth(day)}\n            bottomString={dayOfWeek(day)}\n            isWeekend={isWeekend(day)}\n            isToday={isToday(day)}\n            key={day}\n        />)\n\n    const monthsCells = months.map(toMonths(interval, months, shiftLeft, shiftRight))\n\n    return (\n        <>\n            <FirstHeaderCell onClick={shiftNow} shiftFrom={shiftFrom} fromDay={interval.start}/>\n            <TableRow rowCells={monthsCells}/>\n            <TableRow rowCells={headerDaysCells}/>\n        </>\n    )\n}","import React, {useEffect} from 'react'\nimport {areIntervalsOverlapping, isSameDay, isWeekend, } from 'date-fns'\nimport {TableCell} from './Table-cell/TableCell'\nimport {dayOfMonth, isArrow, isDayBefore, isDayStartRentalInterval, isSelectInterval} from './utils/utils'\nimport {TableRow} from './TableRow'\nimport styled from 'styled-components'\nimport {border, displayFlexAlignCenter, weekendColor} from '../../settings/settings'\n\n\nconst Cell = styled.div`\n  ${displayFlexAlignCenter};\n  border: ${border};\n  justify-content: ${({position}) => position ? position : 'center'};\n  background-color: ${({isWeekend}) => isWeekend ? weekendColor : 'inherit'};\n  font-weight: ${({weight}) => weight ? weight : 600};\n  padding-left: ${({position}) => position ? '1em' : null};\n`\n\nexport function TableBody(props) {\n    const {\n        days, apartments, selectInterval, apartmentId, cellDimensions, viewRentIntervals,\n        leftSideShiftLeftViewRentInterval, leftSideShiftRightViewRentInterval, rightSideShiftLeftViewRentInterval,\n        rightSideShiftRightViewRentInterval, setRentInfo, tariffs, isOpenModal, setIsOpenModal, cancelRent,\n    } = props\n\n    const freeApartmentsCells = (apartmentsByType) => days.map(day => {\n        let freeApartments = Object.keys(apartmentsByType).length\n\n        Object.values(apartmentsByType).forEach(apartment => {\n            if (apartment.rentInfo.some(item => areIntervalsOverlapping({\n                    start: day,\n                    end: day\n                }, item.rentInterval, {inclusive: false}) ||\n                (isSameDay(day, item.rentInterval.end) && apartment.rentInfo.some(element => isSameDay(day, element.rentInterval.start)))\n            )) {\n                freeApartments--\n            }\n\n        })\n        return <Cell isWeekend={isWeekend(day)} weight={800} key={day}> {freeApartments} </Cell>\n    })\n\n    return (\n        <>\n            {Object.keys(apartments).map(apartmentsType =>\n                <React.Fragment key={apartmentsType}>\n                    <TableRow rowCells={freeApartmentsCells(apartments[apartmentsType])} rowTitle={<Cell>{apartmentsType}</Cell>}/>\n                    <ApartmentsRowsByNumbers\n                        days={days}\n                        apartmentsByType={apartments[apartmentsType]}\n                        apartmentsType={apartmentsType}\n                        apartmentIdForSelect={apartmentId}\n                        selectInterval={selectInterval}\n                        cellDimensions={cellDimensions}\n                        viewRentIntervals={viewRentIntervals}\n                        leftSideShiftLeftViewRentInterval={leftSideShiftLeftViewRentInterval}\n                        leftSideShiftRightViewRentInterval={leftSideShiftRightViewRentInterval}\n                        rightSideShiftLeftViewRentInterval={rightSideShiftLeftViewRentInterval}\n                        rightSideShiftRightViewRentInterval={rightSideShiftRightViewRentInterval}\n                        setRentInfo={setRentInfo}\n                        tariffs={tariffs}\n                        isOpenModal={isOpenModal}\n                        setIsOpenModal={setIsOpenModal}\n                        cancelRent={cancelRent}\n                    />\n                </React.Fragment>)}\n        </>\n    )\n}\n\nfunction ApartmentsRowsByNumbers(props) {\n    const {\n        days, apartmentsByType, apartmentsType, apartmentIdForSelect, selectInterval, cellDimensions, viewRentIntervals,\n        leftSideShiftLeftViewRentInterval, leftSideShiftRightViewRentInterval, rightSideShiftLeftViewRentInterval,\n        rightSideShiftRightViewRentInterval, setRentInfo, tariffs, isOpenModal, setIsOpenModal, cancelRent,\n    } = props\n\n    useEffect(() => {\n        Object.keys(viewRentIntervals).forEach(id => {\n            if (id in apartmentsByType) {\n                for (let i = 0; i < viewRentIntervals[id]?.length; i++) {\n\n                    const {start, end} = viewRentIntervals[id][i]\n                    const apartmentRentInterval = apartmentsByType[id].rentInfo[i].rentInterval\n                    const firstTableDay = days[0]\n                    const lastTableDay = days[days.length - 1]\n\n                    if (!isSameDay(start, end) && isDayBefore(start, firstTableDay)) {\n                        leftSideShiftLeftViewRentInterval(id, i)\n                    }\n                    if (isDayBefore(lastTableDay, end)) {\n                        rightSideShiftLeftViewRentInterval(id, i)\n                    }\n                    if (!isSameDay(start, apartmentRentInterval?.start) && isDayBefore(firstTableDay, start)) {\n                        leftSideShiftRightViewRentInterval(id, i)\n                    }\n                    if (!isSameDay(end, apartmentRentInterval?.end) && isDayBefore(end, lastTableDay)) {\n                        rightSideShiftRightViewRentInterval(id, i)\n                    }\n                }\n            }\n        })\n    }, [days, viewRentIntervals, apartmentsByType])\n\n    function bodyDaysCells(id, apartmentsType, days) {\n        return days.map(day => {\n            let [isRent, index] = isDayStartRentalInterval(viewRentIntervals[id], day) || [false, false]\n            return <TableCell\n                bottomString={dayOfMonth(day)}\n                isWeekend={isWeekend(day)}\n                date={day}\n                key={day}\n                isRent={isRent}\n                apartmentId={id}\n                apartmentsType={apartmentsType}\n                cellDimensions={cellDimensions}\n                rentInfo={apartmentsByType[id]?.rentInfo[index]}\n                index={index}\n                isSelect={isSelectInterval(selectInterval, day, apartmentIdForSelect, id)}\n                isLeftArrow={isArrow(viewRentIntervals, apartmentsByType, id, index, 'start')}\n                isRightArrow={isArrow(viewRentIntervals, apartmentsByType, id, index, 'end')}\n                setRentInfo={setRentInfo}\n                tariffs={tariffs}\n                numberOfPersons={apartmentsByType[id].numberOfPersons}\n                isOpenModal={isOpenModal}\n                setIsOpenModal={setIsOpenModal}\n                cancelRent={cancelRent}\n            />\n        })\n    }\n\n    return (\n        <>\n            {Object.keys(apartmentsByType)\n                .sort((a,b)=>apartmentsByType[a].numberOfPersons - apartmentsByType[b].numberOfPersons)\n                .map(apartmentId => {\n                return (\n                    <React.Fragment key={apartmentId}>\n                        <Cell position={'flex-start'} weight={500}\n                              key={apartmentsByType[apartmentId].apartmentsNumber}\n                        >\n                            {apartmentsByType[apartmentId].apartmentsNumber} ({apartmentsByType[apartmentId].numberOfPersons})\n                        </Cell>\n                        {bodyDaysCells(apartmentId, apartmentsType, days)}\n                    </React.Fragment>)\n            })}\n        </>\n    )\n}\n","import {convertObjectWithArraysToObjectWithObjects, CreateViewRentIntervals} from '../commonUtils/commonUtils'\nimport {addDays, areIntervalsOverlapping, subDays} from 'date-fns'\nimport {shifterViewedRentIntervals} from '../components/Table/utils/utils'\nimport {borderWidth, gridAutoRowsHeight, gridColumnsWidth, tariffs} from '../settings/settings'\n\n\nconst IS_SELECT = 'IS_SELECT'\nconst START_SELECTION_INTERVAL = 'START_SELECTION_INTERVAL'\nconst END_SELECTION_INTERVAL = 'END_SELECTION_INTERVAL'\nconst CLEAR_SELECTED_DAYS = 'CLEAR_SELECTED_DAYS'\nconst APARTMENT_ID = 'APARTMENT_ID'\nconst CELL_DIMENSIONS = 'CELL_DIMENSIONS'\nconst RENT_INTERVAL = 'RENT_INTERVAL'\nconst LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL = 'LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL'\nconst LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL = 'LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL'\nconst RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL = 'RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL'\nconst RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL = 'RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL'\nconst RENT_INFO = 'RENT_INFO'\nconst OPEN_MODAL = 'OPEN_MODAL'\nconst CANCEL_RENT = 'CANCEL_RENT'\n\nconst initialState = {\n    apartments: {\n        standard: [\n            {\n                id: 1,\n                apartmentsNumber: 100,\n                numberOfPersons: 2,\n                rentInfo: [\n                    {\n                        id: 1,\n                        rentInterval:{\n                            start: new Date(),\n                            end: addDays(new Date(), 7)\n                        },\n                        personInfo:{firstName: 'Иван', lastName: 'Грозный', email: 'grozni@depesha.horse', phone: '111-222-333'},\n                        additionalPersons: 1,\n                        persons: 2,\n                        tariff: 'lux_5',\n                        percentageDiscount: 0,\n                        moneyDiscount: 500,\n                        price: 35000,\n                    },\n                    {\n                        id: 2,\n                        rentInterval:{\n                            start: addDays(new Date(), 8),\n                            end: addDays(new Date(), 14)\n                        },\n                        personInfo:{firstName: 'Борис', lastName: 'Ельцин', email: 'boris@mail.ru', phone: '666-222-666'},\n                        additionalPersons: 5,\n                        persons: 2,\n                        tariff: 'standard_3',\n                        percentageDiscount: 50,\n                        moneyDiscount: 0,\n                        price: 5750,\n                    },\n                ],\n            },\n            {\n                id: 2,\n                apartmentsNumber: 122,\n                numberOfPersons: 3,\n                rentInfo: [],\n            },\n            {\n                id: 3,\n                apartmentsNumber: 145,\n                numberOfPersons: 2,\n                rentInfo: [],\n            },\n            {\n                id: 4,\n                apartmentsNumber: 201,\n                numberOfPersons: 3,\n                rentInfo: [],\n            },\n            {\n                id: 5,\n                apartmentsNumber: 210,\n                numberOfPersons: 3,\n                rentInfo: [],\n            }\n        ],\n        comfortable: [\n            {\n                id: 6,\n                apartmentsNumber: 300,\n                numberOfPersons: 2,\n                rentInfo: [],\n            },\n            {\n                id: 7,\n                apartmentsNumber: 322,\n                numberOfPersons: 2,\n                rentInfo: [],\n            },\n            {\n                id: 8,\n                apartmentsNumber: 345,\n                numberOfPersons: 2,\n                rentInfo: [],\n            },\n            {\n                id: 9,\n                apartmentsNumber: 401,\n                numberOfPersons: 3,\n                rentInfo: [],\n            },\n            {\n                id: 10,\n                apartmentsNumber: 410,\n                numberOfPersons: 3,\n                rentInfo: [],\n            }\n        ],\n        lux: [\n            {\n                id: 11,\n                apartmentsNumber: 500,\n                numberOfPersons: 5,\n                rentInfo: [],\n            },\n            {\n                id: 12,\n                apartmentsNumber: 601,\n                numberOfPersons: 5,\n                rentInfo: [],\n            },\n            {\n                id: 13,\n                apartmentsNumber: 610,\n                numberOfPersons: 5,\n                rentInfo: [],\n            }\n        ],\n    },\n    tariffs,\n    isSelect: false,\n    isOpenModal: false,\n    selectInterval: {start: null, end: null},\n    apartmentId: null,\n    cellDimensions:{\n        width: gridColumnsWidth - 2 * borderWidth,\n        height: gridAutoRowsHeight - 2 * borderWidth\n    },\n    viewRentIntervals: null,\n}\n\ninitialState.viewRentIntervals = CreateViewRentIntervals(initialState.apartments)\ninitialState.apartments = convertObjectWithArraysToObjectWithObjects('id', initialState.apartments)\n\nfunction tableApartmentsReducer(state = initialState, action) {\n    switch (action.type) {\n        case IS_SELECT: {\n            return {\n                ...state,\n                isSelect: action.isSelect\n            }\n        }\n        case START_SELECTION_INTERVAL: {\n            return {\n                ...state,\n                selectInterval: {start: action.startSelection, end: action.startSelection}\n            }\n        }\n        case END_SELECTION_INTERVAL: {\n            return {\n                ...state,\n                selectInterval: {...state.selectInterval, end: action.endSelection}\n            }\n        }\n        case APARTMENT_ID: {\n            return {\n                ...state,\n                apartmentId: action.apartmentId,\n            }\n        }\n        case CLEAR_SELECTED_DAYS: {\n            return {\n                ...state,\n                selectInterval: {},\n            }\n        }\n        case CELL_DIMENSIONS: {\n            return {\n                ...state,\n                cellDimensions: action.cellDimensions,\n            }\n        }\n        case RENT_INTERVAL: {\n            const rentInfo = state.apartments[action.apartmentsType][state.apartmentId].rentInfo\n            if (rentInfo.some(item => areIntervalsOverlapping(item.rentInterval, action.rentInterval))) return state\n\n            return {\n                ...state,\n                apartments: {\n                    ...state.apartments, [action.apartmentsType]: {\n                        ...state.apartments[action.apartmentsType],\n                        [state.apartmentId]: {\n                            ...state.apartments[action.apartmentsType][state.apartmentId],\n                            rentInfo: [...state.apartments[action.apartmentsType][state.apartmentId].rentInfo, {rentInterval: action.rentInterval}]\n                        }\n                    }\n                },\n                viewRentIntervals: {\n                    ...state.viewRentIntervals,\n                    [state.apartmentId]: [...state.viewRentIntervals[state.apartmentId] || [], action.rentInterval]\n                }\n            }\n        }\n        case LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'start', addDays)\n        }\n        case LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'start', subDays)\n        }\n        case RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'end', subDays)\n        }\n        case RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'end', addDays)\n        }\n        case RENT_INFO: {\n            state = {...state }\n            state.apartments = {...state.apartments}\n            state.apartments[action.apartmentsType] = {...state.apartments[action.apartmentsType]}\n            state.apartments[action.apartmentsType][action.apartmentId]={...state.apartments[action.apartmentsType][action.apartmentId]}\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo = [...state.apartments[action.apartmentsType][action.apartmentId].rentInfo]\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo[action.index] = action.rentInfo\n            return state\n        }\n        case OPEN_MODAL: {\n            return {\n                ...state,\n                isOpenModal: action.isOpenModal\n            }\n        }\n        case CANCEL_RENT: {\n            state = {...state }\n            state.apartments = {...state.apartments}\n            state.apartments[action.apartmentsType] = {...state.apartments[action.apartmentsType]}\n            state.apartments[action.apartmentsType][action.apartmentId]={...state.apartments[action.apartmentsType][action.apartmentId]}\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo=\n                state.apartments[action.apartmentsType][action.apartmentId].rentInfo.filter((_, index) => index !== action.index)\n\n            state.viewRentIntervals = {...state.viewRentIntervals}\n            state.viewRentIntervals[action.apartmentId] = state.viewRentIntervals[action.apartmentId].filter((_, index)=> index !== action.index)\n            return state\n        }\n        default:\n            return state\n    }\n}\n\nconst setSelecting = (isSelect) => ({type: IS_SELECT, isSelect})\nconst setIsOpenModal = (isOpenModal) => ({type: OPEN_MODAL, isOpenModal})\nconst setStartSelection = (startSelection) => ({type: START_SELECTION_INTERVAL, startSelection})\nconst setEndSelection = (endSelection) => ({type: END_SELECTION_INTERVAL, endSelection})\nconst setApartmentId = (apartmentId) => ({type: APARTMENT_ID, apartmentId})\nconst clearSelectedDays = () => ({type: CLEAR_SELECTED_DAYS})\nconst setCellDimensions = (cellDimensions) => ({type: CELL_DIMENSIONS, cellDimensions})\nconst leftSideShiftLeftViewRentInterval = (apartmentId, index) => ({\n    type: LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst leftSideShiftRightViewRentInterval = (apartmentId, index) => ({\n    type: LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst rightSideShiftLeftViewRentInterval = (apartmentId, index) => ({\n    type: RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst rightSideShiftRightViewRentInterval = (apartmentId, index) => ({\n    type: RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst setRentInterval = (apartmentsType, rentInterval) => ({\n    type: RENT_INTERVAL,\n    apartmentsType,\n    rentInterval\n})\nconst setRentInfo = (apartmentsType, index, apartmentId, rentInfo) => ({\n    type: RENT_INFO,\n    apartmentsType,\n    index,\n    apartmentId,\n    rentInfo\n})\nconst cancelRent = (apartmentsType, index, apartmentId) => ({\n    type: CANCEL_RENT,\n    apartmentsType,\n    index,\n    apartmentId\n})\n\nexport {\n    tableApartmentsReducer,\n    setSelecting,\n    setStartSelection,\n    setEndSelection,\n    setApartmentId,\n    clearSelectedDays,\n    setCellDimensions,\n    setRentInterval,\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setRentInfo,\n    setIsOpenModal,\n    cancelRent,\n\n}\n\n\n\n\n","export const getApartments = (state) => state.tableApartments.apartments\nexport const getViewRentIntervals = (state) => state.tableApartments.viewRentIntervals\nexport const getCellDimensions = (state) => state.tableApartments.cellDimensions\nexport const getTariffs = (state) => state.tableApartments.tariffs\nexport const getIsOpenModal = (state) => state.tableApartments.isOpenModal","import {connect} from \"react-redux\";\nimport {TableBody} from './TableBody'\nimport {\n    cancelRent,\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setIsOpenModal,\n    setRentInfo\n} from '../../store/tableApartmentsReducer'\nimport {\n    getApartments,\n    getCellDimensions,\n    getIsOpenModal,\n    getTariffs,\n    getViewRentIntervals\n} from '../../store/tableBodyContainerSelectors'\n\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        days: ownProps.days,\n        selectInterval: ownProps.selectInterval,\n        apartmentId: ownProps.apartmentId,\n        apartments: getApartments(state),\n        cellDimensions: getCellDimensions(state),\n        viewRentIntervals: getViewRentIntervals(state),\n        tariffs: getTariffs(state),\n        isOpenModal: getIsOpenModal(state),\n    }\n}\n\nconst mapDispatchToProps = {\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setRentInfo,\n    setIsOpenModal,\n    cancelRent,\n\n}\n\nexport const TableBodyContainer = connect(mapStateToProps, mapDispatchToProps)(TableBody)","import React from 'react'\nimport {TableHeader} from './TableHeader'\nimport styled from 'styled-components'\nimport {adjustsInterval} from './utils/utils'\nimport {isSameDay} from 'date-fns'\nimport {TableBodyContainer} from './TableBodyContainer'\nimport {gridAutoRowsHeight, gridColumnsWidth, gridTemplateFirstColumnWidth} from '../../settings/settings'\n\n\nconst TableWrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${gridTemplateFirstColumnWidth} repeat(${props => props.daysInTable}, ${gridColumnsWidth}px);\n  grid-auto-rows: minmax(${gridAutoRowsHeight}px, auto);\n  margin: 10px 10px -9px 10px;\n`\n\nexport function Table(props) {\n\n    const {days, interval, setApartmentId, setSelecting, setStartSelection,\n        selectInterval, setRentInterval, clearSelectedDays, isSelect, apartmentId, setEndSelection,\n        daysInTable, setIsOpenModal,\n    } = props\n\n    function handleSelect(event) {\n        const target = event.target.closest('div')\n        const dayStr = target.dataset.date\n        if (dayStr) {\n            const day = new Date(dayStr)\n\n            if (event.type === 'mousedown') {\n                // setCellDimensions({width: target.clientWidth, height: target.clientHeight})\n                setApartmentId(target.dataset.apartment_id)\n                setSelecting(true)\n                setStartSelection(day)\n            } else if (event.type === 'mouseup') {\n                if (selectInterval.start\n                    && selectInterval.end\n                    && !isSameDay(selectInterval.start, selectInterval.end)\n                    && target.dataset.apartment_id === apartmentId)\n                {\n                    setRentInterval(target.dataset.apartments_type, adjustsInterval(selectInterval))\n                    setIsOpenModal(true)\n                }\n                clearSelectedDays()\n                setSelecting(false)\n            }\n        }\n    }\n\n    function updateSelection(event) {\n        if (isSelect && event.target.dataset.apartment_id === apartmentId) {\n            let target = event.target\n            let dayStr = target.dataset.date\n\n            if (dayStr) {\n                const day = new Date(dayStr)\n                setEndSelection(day)\n            }\n        }\n    }\n\n    return (\n        <>\n            <TableWrapper daysInTable={daysInTable + 1}>\n                <TableHeader {...props} interval={interval} days={days}/>\n            </TableWrapper>\n\n            <TableWrapper daysInTable={daysInTable + 1}\n                          onMouseDown={handleSelect}\n                          onMouseUp={handleSelect}\n                          onMouseOver={updateSelection}\n            >\n                <TableBodyContainer days={days}\n                                    selectInterval={selectInterval}\n                                    apartmentId={apartmentId}\n                />\n            </TableWrapper>\n        </>\n    )\n}","import {addDays, set, subDays} from 'date-fns'\nimport {time} from '../settings/settings'\n\nconst SHIFT_LEFT = 'SHIFT_LEFT'\nconst SHIFT_RIGHT = 'SHIFT_RIGHT'\nconst SHIFT_NOW = 'SHIFT_NOW'\nconst SHIFT_FROM = 'SHIFT_FROM'\nconst DAYS_IN_TABLE = 'DAYS_IN_TABLE'\n\nconst from = set(new Date(),time)\nconst to = addDays(from, 29)\n\nconst initialState ={\n    daysInTable: 29,\n    interval: {start: from, end: to}\n}\n\nfunction tableReducer(state=initialState, action){\n    switch (action.type) {\n        case SHIFT_LEFT: {\n            const start = addDays(state.interval.start, 1)\n            const end = addDays(state.interval.end, 1)\n            return {\n                ...state,\n                interval: {start, end},\n            }\n        }\n        case SHIFT_RIGHT: {\n            const start = subDays(state.interval.start, 1)\n            const end = subDays(state.interval.end, 1)\n            return {\n                ...state,\n                interval: {start, end},\n            }\n        }\n        case SHIFT_NOW: {\n            const end = addDays(from, state.daysInTable)\n            return {\n                ...state,\n                interval: {start: from, end}\n            }\n        }\n        case SHIFT_FROM: {\n            const start = action.from\n            const end = addDays(start, state.daysInTable)\n            return {\n                ...state,\n                interval: {start, end}\n            }\n        }\n        case DAYS_IN_TABLE: {\n            const end = addDays(state.interval.start, action.days)\n            return {\n                ...state,\n                daysInTable: action.days,\n                interval: {...state.interval, end}\n            }\n        }\n    \n        default: return state\n    }\n}\n\nconst shiftDateIntervalLeft = () => ({type: SHIFT_LEFT})\nconst shiftDateIntervalRight = () => ({type: SHIFT_RIGHT})\nconst shiftDateIntervalFrom = (FromDay) => ({type: SHIFT_FROM, from: FromDay})\nconst shiftDateIntervalNow = () => ({type: SHIFT_NOW})\nconst changeDaysInTable = (days) => ({type: DAYS_IN_TABLE, days})\n\nexport {tableReducer, shiftDateIntervalLeft, shiftDateIntervalRight, shiftDateIntervalFrom, shiftDateIntervalNow, changeDaysInTable}\n\n\n\n\n","import {createSelector} from 'reselect'\nimport {eachDayOfInterval, set} from 'date-fns'\nimport {adjustsInterval} from '../components/Table/utils/utils'\n\n\nexport const getInterval = (state) => state.table.interval\nexport const getDaysInTable = (state) => state.table.daysInTable\nexport const getIsSelect = (state) => state.tableApartments.isSelect\nexport const getApartmentId = (state) => state.tableApartments.apartmentId\nexport const getSelectIntervalSelector = (state) => state.tableApartments.selectInterval\n\nexport const getDays = createSelector(\n    getInterval,\n    interval => eachDayOfInterval(interval).map(day=>set(day, {hours:12, minutes:0, seconds:0, milliseconds:0}))\n)\n\nexport const getSelectInterval = createSelector(\n    getSelectIntervalSelector,\n    selectInterval => adjustsInterval(selectInterval)\n)\n","import {connect} from \"react-redux\";\nimport {Table} from \"./Table\";\nimport {\n    shiftDateIntervalFrom,\n    shiftDateIntervalLeft,\n    shiftDateIntervalNow,\n    shiftDateIntervalRight,\n} from '../../store/tableReducer'\nimport {\n    clearSelectedDays,\n    setApartmentId,\n    setCellDimensions,\n    setEndSelection, setIsOpenModal,\n    setRentInterval,\n    setSelecting,\n    setStartSelection,\n} from '../../store/tableApartmentsReducer'\nimport {\n    getApartmentId,\n    getDaysInTable,\n    getInterval,\n    getIsSelect,\n    getSelectInterval\n} from '../../store/tableContainerSelectors'\nimport {eachDayOfInterval, set} from 'date-fns'\nimport {time} from '../../settings/settings'\n\n\nfunction mapStateToProps(state) {\n    return {\n        interval: getInterval(state),\n        daysInTable: getDaysInTable(state),\n        // days: getDays(state), // WTF Bro?\n        days: eachDayOfInterval(state.table.interval).map(day=>set(day, time)),\n        isSelect: getIsSelect(state),\n        selectInterval: getSelectInterval(state),\n        apartmentId: getApartmentId(state),\n    }\n}\n\nconst mapDispatchToProps = {\n    shiftDateIntervalLeft,\n    shiftDateIntervalRight,\n    shiftDateIntervalFrom,\n    shiftDateIntervalNow,\n    setSelecting,\n    setStartSelection,\n    setEndSelection,\n    setApartmentId,\n    clearSelectedDays,\n    setCellDimensions,\n    setRentInterval,\n    setIsOpenModal,\n\n}\n\n\nexport const TableContainer = connect(mapStateToProps, mapDispatchToProps)(Table)","import React from 'react'\nimport {TableContainer} from '../Table/TableContainer'\nimport styled from 'styled-components'\nimport {border, MainBgColor} from '../../settings/settings'\n\n\nconst MainWrapper = styled.main`\n  grid-area: main;\n  border: ${border};\n  background: ${MainBgColor};\n  overflow-x: auto;\n`\n\nexport function Main(props) {\n\n    return <MainWrapper>\n        <TableContainer/>\n    </MainWrapper>\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {border, secondaryColor} from '../../settings/settings'\n\nconst FooterWrapper = styled.footer`\n  grid-area: footer;\n  border: ${border};\n  background: ${secondaryColor};\n`\n\nexport function Footer(props) {\n    return <FooterWrapper>Footer</FooterWrapper>\n}","import React from 'react'\nimport {Icon} from '../simpleElements/Icon'\nimport styled from 'styled-components'\nimport {borderMix, displayFlexAlignCenter, menuItemColor} from '../../settings/settings'\n\nconst MenuItemWrapper = styled.div`\n  ${displayFlexAlignCenter};\n  justify-content: flex-start;\n  border: ${borderMix( undefined,undefined,'#7693d5')} ;\n  border-radius: 2px;\n  background-color: ${menuItemColor};\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 2px 5px rgba(0,0,0,0.22);\n  padding: 8px 0;\n  margin: 0 2px;\n\n  :hover {\n    background-color: #87ee9d;\n    cursor: pointer;\n  }\n\n  :active {\n    box-shadow: inset 2px 2px 5px rgba(154, 147, 140, 0.5), 1px 1px 5px rgba(255, 255, 255, 1);\n  }\n`\n\nconst MenuItemIcon = styled(Icon)`\nmargin: 0 5px;\n`\n\nconst MenuItemTitle = styled.span`\nmargin-right: 5px;\n`\n\nexport function MenuItem(props) {\n    const {openModal, iconName, menuItemTitle, } = props\n\n    return (\n        <MenuItemWrapper onClick={openModal}>\n            <MenuItemIcon>{iconName}</MenuItemIcon>\n            {menuItemTitle && <MenuItemTitle>{menuItemTitle}</MenuItemTitle>}\n        </MenuItemWrapper>\n    )\n}","import {Field, Form, Formik} from 'formik'\nimport React from 'react'\nimport {Button} from '../simpleElements/Button'\nimport {SaveCloseButtons} from './SaveCloseButtons'\n\nexport const TableSettingsForm = (props) => {\n    const{daysInTable, changeDaysInTable, closeModal, } = props\n\n    const min = 29\n    const max = 366\n\n    return (\n        <Formik\n            initialValues={{daysInTable: daysInTable}}\n            onSubmit={(values) => {\n                changeDaysInTable(values.daysInTable)\n            }}\n        >\n            {({setFieldValue}) =>\n            <Form>\n                <label htmlFor=\"daysInTable\">Дней в сетке: </label>\n                <Field name=\"daysInTable\" type=\"number\" min={min} max={max} title={`мин: ${min}; макс: ${max}`} />\n                <Button type=\"button\"  onClick={() => setFieldValue('daysInTable', min)} size={'0.8em'}>Сбросить</Button>\n                <hr />\n                <SaveCloseButtons closeHandler={closeModal}/>\n            </Form>}\n        </ Formik>\n    )\n}","import {Field, Form, Formik} from 'formik'\nimport React, {Fragment} from 'react'\nimport {SaveCloseButtons} from './SaveCloseButtons'\nimport * as settings from '../../settings/settings'\nimport styled from 'styled-components'\n\n\nconst SettingsExample = styled.div`\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  background-color: ${props => props.background};\n  border: ${settings.border};\n  vertical-align: middle;\n`\n\nexport const CommonSettingsForm = (props) => {\n    const {closeModal,} = props\n\n    return (\n        <Formik\n            initialValues={settings}\n        >\n            <Form>\n                <h3>\n                    One fine day, the settings can still be changed through this form,\n                    but now they can be found in: 'src/settings/settings.js'\n                </h3>\n                {Object.keys(settings).map(item => {\n                    return (\n                        typeof settings[item] !== 'function' && <Fragment key={item}>\n                            <label htmlFor={item}>{item}</label>\n                            <Field name={item} type=\"text\" readOnly/>\n                            {item.includes('Color') && <SettingsExample  background={settings[item]}/> }\n                            <br/>\n                        </Fragment>\n                    )\n                })}\n\n                <SaveCloseButtons closeHandler={closeModal} notSave/>\n            </Form>\n        </ Formik>\n    )\n}","import React, {Component, Fragment} from 'react'\nimport Chart from \"react-apexcharts\";\nimport {SaveCloseButtons} from '../Forms/SaveCloseButtons'\n\n\nexport class Report extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateCharts = this.updateCharts.bind(this);\n\n        this.state = {\n            optionsMixedChart: {\n                chart: {\n                    id: \"basic-bar\",\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        columnWidth: \"50%\"\n                    }\n                },\n                stroke: {\n                    width: [4, 0, 0]\n                },\n                xaxis: {\n                    categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n                },\n                markers: {\n                    size: 6,\n                    strokeWidth: 3,\n                    fillOpacity: 0,\n                    strokeOpacity: 0,\n                    hover: {\n                        size: 8\n                    }\n                },\n                yaxis: {\n                    tickAmount: 5,\n                    min: 0,\n                    max: 100\n                }\n            },\n            seriesMixedChart: [\n                {\n                    name: \"series-1\",\n                    type: \"line\",\n                    data: [30, 40, 25, 50, 49, 21, 70, 51]\n                },\n                {\n                    name: \"series-2\",\n                    type: \"column\",\n                    data: [23, 12, 54, 61, 32, 56, 81, 19]\n                },\n                {\n                    name: \"series-3\",\n                    type: \"column\",\n                    data: [62, 12, 45, 55, 76, 41, 23, 43]\n                }\n            ],\n            optionsRadial: {\n                plotOptions: {\n                    radialBar: {\n                        startAngle: -135,\n                        endAngle: 225,\n                        hollow: {\n                            margin: 0,\n                            size: \"70%\",\n                            background: \"#fff\",\n                            image: undefined,\n                            imageOffsetX: 0,\n                            imageOffsetY: 0,\n                            position: \"front\",\n                            dropShadow: {\n                                enabled: true,\n                                top: 3,\n                                left: 0,\n                                blur: 4,\n                                opacity: 0.24\n                            }\n                        },\n                        track: {\n                            background: \"#fff\",\n                            strokeWidth: \"67%\",\n                            margin: 0, // margin is in pixels\n                            dropShadow: {\n                                enabled: true,\n                                top: -3,\n                                left: 0,\n                                blur: 4,\n                                opacity: 0.35\n                            }\n                        },\n\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                offsetY: -20,\n                                show: true,\n                                color: \"#888\",\n                                fontSize: \"13px\"\n                            },\n                            value: {\n                                formatter: function (val) {\n                                    return val;\n                                },\n                                color: \"#111\",\n                                fontSize: \"30px\",\n                                show: true\n                            }\n                        }\n                    }\n                },\n                fill: {\n                    type: \"gradient\",\n                    gradient: {\n                        shade: \"dark\",\n                        type: \"horizontal\",\n                        shadeIntensity: 0.5,\n                        gradientToColors: [\"#ABE5A1\"],\n                        inverseColors: true,\n                        opacityFrom: 1,\n                        opacityTo: 1,\n                        stops: [0, 100]\n                    }\n                },\n                stroke: {\n                    lineCap: \"round\"\n                },\n                labels: [\"Percent\"]\n            },\n            seriesRadial: [76],\n            optionsBar: {\n                chart: {\n                    stacked: true,\n                    stackType: \"100%\",\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                dataLabels: {\n                    dropShadow: {\n                        enabled: true\n                    }\n                },\n                stroke: {\n                    width: 0\n                },\n                xaxis: {\n                    categories: [\"Fav Color\"],\n                    labels: {\n                        show: false\n                    },\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false\n                    }\n                },\n                fill: {\n                    opacity: 1,\n                    type: \"gradient\",\n                    gradient: {\n                        shade: \"dark\",\n                        type: \"vertical\",\n                        shadeIntensity: 0.35,\n                        gradientToColors: undefined,\n                        inverseColors: false,\n                        opacityFrom: 0.85,\n                        opacityTo: 0.85,\n                        stops: [90, 0, 100]\n                    }\n                },\n\n                legend: {\n                    position: \"bottom\",\n                    horizontalAlign: \"right\"\n                }\n            },\n            seriesBar: [\n                {\n                    name: \"blue\",\n                    data: [32]\n                },\n                {\n                    name: \"green\",\n                    data: [41]\n                },\n                {\n                    name: \"yellow\",\n                    data: [12]\n                },\n                {\n                    name: \"red\",\n                    data: [65]\n                }\n            ]\n        };\n    }\n\n    updateCharts() {\n        const max = 90;\n        const min = 30;\n        const newMixedSeries = [];\n        const newBarSeries = [];\n\n        this.state.seriesMixedChart.forEach((s) => {\n            const data = s.data.map(() => {\n                return Math.floor(Math.random() * (max - min + 1)) + min;\n            });\n            newMixedSeries.push({ data: data, type: s.type });\n        });\n\n        this.state.seriesBar.forEach((s) => {\n            const data = s.data.map(() => {\n                return Math.floor(Math.random() * (180 - min + 1)) + min;\n            });\n            newBarSeries.push({ data, name: s.name });\n        });\n\n        this.setState({\n            seriesMixedChart: newMixedSeries,\n            seriesBar: newBarSeries,\n            seriesRadial: [Math.floor(Math.random() * (90 - 50 + 1)) + 50]\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <h1 style={{color: '#d90af1', textAlign: 'center'}}>Your big and powerful reports on everything!</h1>\n                <div className=\"app\">\n                    <div className=\"row\">\n                        <div className=\"col mixed-chart\">\n                            <Chart\n                                options={this.state.optionsMixedChart}\n                                series={this.state.seriesMixedChart}\n                                type=\"line\"\n                                width=\"500\"\n                            />\n                        </div>\n\n                        <div className=\"col radial-chart\">\n                            <Chart\n                                options={this.state.optionsRadial}\n                                series={this.state.seriesRadial}\n                                type=\"radialBar\"\n                                width=\"280\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col percentage-chart\">\n                            <Chart\n                                options={this.state.optionsBar}\n                                height={140}\n                                series={this.state.seriesBar}\n                                type=\"bar\"\n                                width={500}\n                            />\n                        </div>\n\n                        <p className=\"col\">\n                            <button onClick={this.updateCharts}>Update!</button>\n                        </p>\n                    </div>\n                </div>\n\n                <SaveCloseButtons closeHandler={this.props.closeModal} notSave/>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {MenuItem} from './MenuItem'\nimport {TableSettingsForm} from '../Forms/TableSettingsForm'\nimport {withModal} from '../Modal/withModal'\nimport styled from 'styled-components'\nimport {border, displayFlexAlignCenter, secondaryColor} from '../../settings/settings'\nimport {Icon} from '../simpleElements/Icon'\nimport {CommonSettingsForm} from '../Forms/CommonSettingsForm'\nimport {Report} from './Reports'\n\n\nconst HeaderWrapper = styled.header`\n  grid-area: header;\n  border: ${border};\n  background: ${secondaryColor};\n  ${displayFlexAlignCenter};\n  justify-content: space-between;\n`\n\nconst LeftSideMenu = styled.div`\n  ${displayFlexAlignCenter};\n  justify-content: flex-start;\n`\n\nconst TableSettingsMenuItem = withModal(MenuItem)\n\nexport function Header(props) {\n    const {daysInTable, changeDaysInTable, } = props\n\n    return (\n        <HeaderWrapper>\n            <LeftSideMenu>\n                <Icon size={36}>hotel</Icon>\n                <TableSettingsMenuItem iconName={'grid_on'} menuItemTitle={'Сетка'}>\n                    <TableSettingsForm daysInTable={daysInTable} changeDaysInTable={changeDaysInTable}/>\n                </TableSettingsMenuItem>\n\n                <TableSettingsMenuItem iconName={'settings'} menuItemTitle={'Настройки'}>\n                    <CommonSettingsForm />\n                </TableSettingsMenuItem>\n\n                <TableSettingsMenuItem iconName={'format_list_bulleted'} menuItemTitle={'Отчеты'}>\n                    <Report />\n                </TableSettingsMenuItem>\n            </LeftSideMenu>\n\n            <div>\n                <MenuItem iconName={'account_box'} />\n            </div>\n        </HeaderWrapper>\n    )\n}","export const getDaysInTable = (state) => state.table.daysInTable\n","import {connect} from 'react-redux'\nimport {changeDaysInTable} from '../../store/tableReducer'\nimport {Header} from './Header'\nimport {getDaysInTable} from '../../store/headerContainerSelector'\n\nfunction mapStateToProps(state) {\n    return {\n        daysInTable: getDaysInTable(state),\n    }\n}\n\nexport const HeaderContainer = connect(mapStateToProps,    {changeDaysInTable})(Header)","import './App.css';\nimport {Main} from \"./components/Main/Main\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {HeaderContainer} from './components/Header/HeaderContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderContainer/>\n      <Main/>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux'\nimport {tableReducer} from './tableReducer'\nimport {tableApartmentsReducer} from './tableApartmentsReducer'\n\nlet reducers = combineReducers({\n    table: tableReducer,\n    tableApartments: tableApartmentsReducer\n})\n\nexport let store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  \n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"SettingsMenuItem_Modal__1Ib8k\",\"Overlay\":\"SettingsMenuItem_Overlay__2EU91\"};"],"sourceRoot":""}