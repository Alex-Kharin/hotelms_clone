{"version":3,"sources":["settings/settings.js","components/simpleElements/TodayMarker.jsx","components/simpleElements/Icon.jsx","components/simpleElements/Button.jsx","components/Table/Table-cell/MonthCell.jsx","components/Table/utils/utils.js","components/Table/Rent.jsx","components/Modal/withModal.jsx","components/Forms/SaveCloseButtons.jsx","components/Forms/OrderCreationForm.jsx","commonUtils/commonUtils.js","components/Table/Table-cell/TableCell.jsx","components/Table/TableRow.jsx","components/Table/Table-cell/DatePicker.jsx","components/Table/Table-cell/FirstHeaderCell.jsx","components/Table/TableHeader.jsx","components/Table/TableBody.jsx","api/api.js","store/tableApartmentsReducer.jsx","store/tableBodyContainerSelectors.js","assets/images/preloader.svg","components/simpleElements/Preloader.jsx","components/Table/TableBodyContainer.jsx","components/Table/Table.jsx","store/tableReducer.js","store/tableContainerSelectors.js","components/Table/TableContainer.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Header/MenuItem.jsx","components/Forms/TableSettingsForm.jsx","components/Forms/CommonSettingsForm.jsx","components/Header/Reports.jsx","components/Header/Header.jsx","store/headerContainerSelector.js","components/Header/HeaderContainer.jsx","App.js","reportWebVitals.js","store/store.js","index.js","components/Modal/SettingsMenuItem.module.css"],"names":["borderWidth","border","borderMix","borderStyle","borderColor","displayFlexAlignCenter","todayMarkerZIndex","rentElementsZIndex","btnHeaderZIndex","weekendColor","btnColor","menuItemColor","secondaryColor","MainBgColor","selectionColor","rentElementColor","gridColumnsWidth","gridAutoRowsHeight","gridTemplateFirstColumnWidth","time","hours","minutes","seconds","milliseconds","tariffs","standard_2","standard_3","standard_4","standard_5","comfortable_2","comfortable_3","comfortable_4","comfortable_5","lux_2","lux_3","lux_4","lux_5","maxAdditionalPersons","priceAdditionalPerson","currentCurrency","Circle","styled","div","VerticalLine","TodayMarker","CommonIcon","className","children","Icon","size","Btn","button","background","isFlex","type","Button","props","onClick","iconName","Months","daysInCurrentMonth","position","MonthCellTitle","strong","MonthCell","leftBtn","monthName","yearOfDate","rightBtn","dayOfMonth","day","format","locale","ru","dayOfWeek","month","dateToString","date","getTime","isDayBefore","day1","day2","startOfDay","intervalLength","interval","differenceInCalendarDays","end","start","setTimeToDate","split","set","adjustsInterval","isSelectInterval","apartmentIdForSelect","currentId","isWithinInterval","shifterViewedRentIntervals","state","action","rangeBorder","shiftFunction","viewRentIntervals","apartmentId","index","isArrow","apartmentsByType","id","rangeInterval","rentInfo","rentInterval","CreateViewRentIntervals","rentInfos","reduce","acc","newViewRentInterval","rentInfoInterval","outerInterval","innerInterval","visibleInterval","isSameDay","checkAndReturnNewViewRentInterval","collectObjects","apartmentsArray","map","apartment","filter","RentWrapper","attrs","forTooltip","undefined","cellDimensions","viewRentInterval","width","height","Arrow","FullName","Tag","top","bottom","left","right","Ul","ul","TooltipSpan","span","withModal","WrappedComponent","useState","isOpenModal","showModal","setShowModal","closeModal","hasOwnProperty","setIsOpenModal","openModal","isOpen","contentLabel","style","Modal","overlayClassName","Overlay","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","React","Children","child","isValidElement","cloneElement","setAppElement","ButtonsWrapper","SaveCloseButtons","closeHandler","notSave","LikeFormField","ErrorMessageElement","TitleWrapper","Delete","message","OrderCreationForm","setRentInfo","apartmentsType","numberOfPersons","cancelRent","personInfo","firstName","lastName","email","phone","additionalPersons","persons","tariff","percentageDiscount","moneyDiscount","price","comment","tariffPrice","initialValues","checkInTime","checkOutTime","checkIn","nights","checkOut","validationSchema","Yup","max","required","matches","test","value","parseFloat","onSubmit","values","obj","newRentInfo","Object","keys","objKey","Math","round","random","htmlFor","name","autoFocus","component","readOnly","title","min","as","Array","num","InfoFormField","fieldName","isAdditionalPersons","PriceField","rows","cols","field","useFormikContext","personsAddsSum","restProps","setFieldValue","useField","meta","useEffect","days","Number","toFixed","getPrice","moneyDiscountCalc","touched","error","CellWrapper","isSelect","isWeekend","TopString","topStringFontWeight","BottomString","bottomStringFontWeight","ModalRent","isLeftArrow","isRightArrow","place","effect","TableCell","isToday","isRent","topString","bottomString","TableRow","firstCell","rowTitle","rowCells","WEEKDAYS_SHORT","MONTHS","WEEKDAYS_LONG","FIRST_DAY_OF_WEEK","LABELS","nextMonth","previousMonth","parseDate","str","parsed","dateFnsParse","Date","DateUtils","isDate","formatDate","dateFnsFormat","DatePicker","selectedDay","fromDay","isEmpty","setState","FORMAT","dayPickerProps","todayButton","months","weekdaysLong","weekdaysShort","firstDayOfWeek","labels","placeholder","keepFocus","inputProps","onDayChange","modifiers","dayPickerInput","input","getInput","trim","onDayPickerHide","shiftFrom","handleDayPickerHide","Wrapper","DateChoiceWrapper","ColumnTitle","FirstHeaderCell","TableHeader","shiftLeft","shiftDateIntervalLeft","shiftRight","shiftDateIntervalRight","shiftNow","shiftDateIntervalNow","shiftDateIntervalFrom","eachMonthOfInterval","headerDaysCells","monthsCells","isAfter","startOfMonth","endOfMonth","firstMonth","lastMonth","length","toMonths","Cell","weight","TableBody","apartments","selectInterval","leftSideShiftLeftViewRentInterval","leftSideShiftRightViewRentInterval","rightSideShiftLeftViewRentInterval","rightSideShiftRightViewRentInterval","freeApartments","Fragment","ApartmentsRowsByNumbers","bodyDaysCells","array","i","isDayStartRentalInterval","forEach","apartmentRentInterval","firstTableDay","lastTableDay","sort","a","b","apartmentsNumber","instance","axios","baseURL","headers","apartmentsApi","get","then","response","data","APARTMENTS","VIEW_RENT_INTERVALS","TOGGLE_IS_FETCHING","IS_SELECT","START_SELECTION_INTERVAL","END_SELECTION_INTERVAL","CLEAR_SELECTED_DAYS","APARTMENT_ID","RENT_INTERVAL","LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL","LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL","RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL","RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL","RENT_INFO","OPEN_MODAL","CANCEL_RENT","initialState","isFetching","setApartments","setViewRentIntervals","toggleIsFetching","getApartments","tableApartments","getViewRentIntervals","getCellDimensions","getTariffs","getIsOpenModal","getIsFetching","getDays","eachDayOfInterval","table","getFreeApartments","createSelector","apartmentType","some","item","areIntervalsOverlapping","inclusive","element","PreloaderWrapper","Preloader","src","preloader","alt","mapDispatchToProps","requestApartments","dispatch","getState","collection","connect","ownProps","TableWrapper","daysInTable","SHIFT_LEFT","SHIFT_RIGHT","SHIFT_NOW","SHIFT_FROM","DAYS_IN_TABLE","from","to","addDays","getInterval","getDaysInTable","getIsSelect","getApartmentId","getSelectInterval","FromDay","setSelecting","setStartSelection","startSelection","setEndSelection","endSelection","setApartmentId","clearSelectedDays","setRentInterval","TableContainer","handleSelect","event","target","closest","dayStr","dataset","apartment_id","apartments_type","onMouseDown","onMouseUp","onMouseOver","MainWrapper","main","Main","FooterWrapper","footer","Footer","MenuItemWrapper","MenuItemIcon","MenuItemTitle","MenuItem","menuItemTitle","TableSettingsForm","changeDaysInTable","SettingsExample","settings","CommonSettingsForm","includes","Report","updateCharts","bind","optionsMixedChart","chart","toolbar","show","plotOptions","bar","columnWidth","stroke","xaxis","categories","markers","strokeWidth","fillOpacity","strokeOpacity","hover","yaxis","tickAmount","seriesMixedChart","optionsRadial","radialBar","startAngle","endAngle","hollow","margin","image","imageOffsetX","imageOffsetY","dropShadow","enabled","blur","opacity","track","dataLabels","showOn","offsetY","color","fontSize","formatter","val","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","lineCap","seriesRadial","optionsBar","stacked","stackType","horizontal","axisBorder","axisTicks","legend","horizontalAlign","seriesBar","newMixedSeries","newBarSeries","this","s","floor","push","textAlign","options","series","Component","HeaderWrapper","header","LeftSideMenu","TableSettingsMenuItem","HeaderContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","subDays","_","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d83d19f6.chunk.js","sourcesContent":["// Common\nexport const borderWidth = 1\nexport const border = `${borderWidth}px solid black`\n\nexport function borderMix(borderWidth='1px',\n                          borderStyle='solid',\n                          borderColor='black') {\n    return `${borderWidth} ${borderStyle} ${borderColor}`\n}\n\nexport const displayFlexAlignCenter = 'display: flex; align-items: center'\n\n\n// Z-indexes:\nexport const todayMarkerZIndex = 500\nexport const rentElementsZIndex = 450\nexport const btnHeaderZIndex = 505\n// 1000 - modal in src/components/Modal/SettingsMenuItem.module.css\n\n// Colors\nexport const weekendColor = 'lightblue'\nexport const btnColor = '#0277bd'\nexport const menuItemColor = '#9feaab'\nexport const secondaryColor = 'lightseagreen'\nexport const MainBgColor = '#d5d5d57f'\nexport const selectionColor = '#e2c50a'\nexport const rentElementColor = '#00c0e7'\n\n\n// TableWrapper = styled.div on src/components/Table/Table.jsx\nexport const gridColumnsWidth = 50\nexport const gridAutoRowsHeight = 40\nexport const gridTemplateFirstColumnWidth = '250px'\n\n\n// **************************************************************** //\nexport const time = {hours:12, minutes:0, seconds:0, milliseconds:0}\n\n// it should be a flat structure\nexport const tariffs = {\n    standard_2: 1000,\n    standard_3: 1500,\n    standard_4: 2000,\n    standard_5: 2500,\n    comfortable_2: 2000,\n    comfortable_3: 2500,\n    comfortable_4: 3000,\n    comfortable_5: 3500,\n    lux_2: 5000,\n    lux_3: 6000,\n    lux_4: 7000,\n    lux_5: 8000,\n}\nexport const maxAdditionalPersons = 6\nexport const priceAdditionalPerson = 500\nexport const currentCurrency = 'руб'\n","import React from 'react'\nimport styled from 'styled-components'\nimport {todayMarkerZIndex} from '../../settings/settings'\n\n\nconst Circle = styled.div`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: crimson;\n  top: -30%;\n  right: 5%;\n  z-index: ${todayMarkerZIndex};\n`\n\nconst VerticalLine = styled.div`\n  position: absolute;\n  height: 75vh;\n  border-left: 2px solid crimson;\n  top: 0;\n  right: 19%;\n  z-index: ${todayMarkerZIndex};\n`\n\nexport function TodayMarker() {\n    return (\n    <>\n        <Circle/>\n        <VerticalLine/>\n    </>)\n}","import styled from 'styled-components'\nimport React from 'react'\n\nexport const CommonIcon = ({ className, children }) => (\n    <span className={'material-icons ' + className}>\n    {children}\n  </span>\n)\n\nexport const Icon = styled(CommonIcon)`\n  font-size: ${({size}) => size}px;\n`","import React from \"react\"\nimport styled from \"styled-components\";\nimport {btnColor, btnHeaderZIndex, gridAutoRowsHeight} from '../../settings/settings'\nimport {CommonIcon} from './Icon'\n\n\nconst Btn = styled.button`\n  font-size: ${({size}) => size || '1.2em'};\n  background-color: ${({background}) => background || btnColor};\n  border-radius: 3px;\n  min-height: 30px;\n  min-width: ${gridAutoRowsHeight};\n  display: ${({isFlex}) => isFlex && 'flex'};\n  align-items: ${({isFlex}) => isFlex && 'center'};\n  z-index: ${({isFlex}) => isFlex && btnHeaderZIndex};\n  type: ${({type}) => type};\n  color: white;\n`\n\nexport function Button(props) {\n    const { onClick, size, isFlex, iconName, children, type, background} = props\n\n    return (\n        <Btn onClick={onClick} size={size} isFlex={isFlex} type={type} background={background}>\n            {iconName && <CommonIcon>{iconName}</CommonIcon>}\n            <span>{children}</span>\n        </Btn>\n    )\n}","import styled from 'styled-components'\nimport React from 'react'\nimport {border, displayFlexAlignCenter} from '../../../settings/settings'\n\n\nconst Months = styled.div`\n  grid-column: span ${props => props.daysInCurrentMonth};\n  border: ${border};\n  ${displayFlexAlignCenter};\n  justify-content: ${props => props.daysInCurrentMonth > 3 ? 'space-between' : props.position};\n  padding: 0 5px;\n`\n\nconst MonthCellTitle = styled.strong`\n  margin: auto 45px;\n`\n\nexport function MonthCell(props) {\n    const {daysInCurrentMonth, position, leftBtn, monthName, yearOfDate, rightBtn} = props\n\n    return (\n        <Months daysInCurrentMonth = {daysInCurrentMonth} position={position}>\n            {leftBtn} {daysInCurrentMonth > 3 && <MonthCellTitle>{monthName} {yearOfDate}</MonthCellTitle>} {rightBtn}\n        </Months>\n    )\n}","import {\n    differenceInCalendarDays,\n    endOfMonth,\n    format,\n    isAfter,\n    isSameDay,\n    isWithinInterval,\n    set,\n    startOfDay,\n    startOfMonth,\n} from 'date-fns'\nimport {ru} from 'date-fns/locale'\nimport {Button} from '../../simpleElements/Button'\nimport React from 'react'\nimport {MonthCell} from '../Table-cell/MonthCell'\nimport {borderWidth} from '../../../settings/settings'\n\n\nconst dayOfMonth = (day) => format(day, 'dd', {locale: ru})\nconst dayOfWeek = (day) => format(day, 'eeeeee', {locale: ru})\nconst monthName = (month) => format(month, 'LLLL', {locale: ru})\nconst yearOfDate = (date) => format(date, 'y', {locale: ru})\nconst dateToString = (date) => format(date, 'dd-MM-y', {locale: ru})\nconst getTime = (date) => format(date, 'HH:mm', {locale: ru})\nconst isDayBefore = (day1, day2) => startOfDay(day1) < startOfDay(day2)\nconst intervalLength = (interval) => differenceInCalendarDays(interval.end, interval.start)\nconst setTimeToDate = (date, time) => {\n    const [hours, minutes] = time.split(':')\n    return set(date, {hours, minutes})\n}\nconst isIntervalIncludedInAnother = (outerInterval, innerInterval) => {\n    return outerInterval.start < innerInterval.start && outerInterval.end > innerInterval.end\n}\n\nfunction toMonths(interval, months, shiftLeft, shiftRight) {\n    return function (month) {\n        const start = isAfter(interval.start, startOfMonth(month)) ? interval.start : startOfMonth(month)\n        const end = isAfter(endOfMonth(month), interval.end) ? interval.end : endOfMonth(month)\n\n        const daysInCurrentMonth = differenceInCalendarDays(end, start) + 1\n\n        const firstMonth = months[0]\n        const lastMonth = months[months.length - 1]\n        let position = ''\n\n        const leftBtn = month === firstMonth ? (position = 'flex-start', <Button iconName={'keyboard_arrow_left'}\n                                                                                 onClick={shiftLeft} isFlex/>) : null\n        const rightBtn = month === lastMonth ? (position = 'flex-end', <Button iconName={'keyboard_arrow_right'}\n                                                                               onClick={shiftRight} isFlex/>) : null\n\n        return <MonthCell daysInCurrentMonth={daysInCurrentMonth}\n                          leftBtn={leftBtn}\n                          rightBtn={rightBtn}\n                          monthName={monthName(month)}\n                          yearOfDate={yearOfDate(month)}\n                          position={position}\n                          key={month}\n        />\n    }\n}\n\nfunction adjustsInterval(interval) {\n    return isDayBefore(interval.end, interval.start)\n        ? {start: interval.end, end: interval.start}\n        : interval\n}\n\nfunction isSelectInterval(interval, day, apartmentIdForSelect, currentId) {\n    return interval.start\n        ? isWithinInterval(day, interval) && apartmentIdForSelect === currentId\n        : false\n}\n\nfunction shifterViewedRentIntervals(state, action, rangeBorder, shiftFunction) {\n    let day = state.viewRentIntervals[action.apartmentId][action.index][rangeBorder]\n    day = shiftFunction(day, 1)\n\n    state = {...state}\n    state.viewRentIntervals = {...state.viewRentIntervals}\n    state.viewRentIntervals[action.apartmentId] = [...state.viewRentIntervals[action.apartmentId]]\n    state.viewRentIntervals[action.apartmentId][action.index] = {\n        ...state.viewRentIntervals[action.apartmentId][action.index],\n        [rangeBorder]: day\n    }\n    return state\n}\n\nfunction isDayStartRentalInterval(array, day) {\n    for (let i = 0; i < array?.length; i++) {\n        if (isSameDay(day, array[i].start) && !isSameDay(array[i].start, array[i].end)) {\n            return [array[i], i]\n        }\n    }\n    return false\n}\n\nfunction isArrow(viewRentIntervals, apartmentsByType, id, index, rangeInterval) {\n    return rangeInterval === 'start'\n        ? viewRentIntervals[id] && isDayBefore(apartmentsByType[id]?.rentInfo[index]?.rentInterval.start, viewRentIntervals[id][index]?.start)\n        : viewRentIntervals[id] && isDayBefore(viewRentIntervals[id][index]?.end, apartmentsByType[id]?.rentInfo[index]?.rentInterval.end)\n}\n\n// = width*duration + 2*duration*borderWidth\nfunction widthRentElement(cellDimensions, viewRentInterval) {\n    return cellDimensions.width * intervalLength(viewRentInterval) +\n        intervalLength(viewRentInterval) * 2 * borderWidth + 'px'\n}\n\nfunction checkAndReturnNewViewRentInterval(rentInfoInterval, interval) {\n    let visibleInterval = null\n    if (isSameDay(rentInfoInterval.start, interval.end)) {\n        return {start: rentInfoInterval.start, end: rentInfoInterval.start}\n    }\n    if (isSameDay(rentInfoInterval.end, interval.start)) {\n        return {start: rentInfoInterval.end, end: rentInfoInterval.end}\n    }\n    if (\n        isWithinInterval(rentInfoInterval.end, interval)\n        && (isSameDay(rentInfoInterval.start, interval.start)\n            || isDayBefore(rentInfoInterval.start, interval.start))\n    ) {\n        visibleInterval = {...rentInfoInterval, start: interval.start}\n    }\n    if (\n        isWithinInterval(rentInfoInterval.start, interval)\n        && (isSameDay(rentInfoInterval.end, interval.end)\n            || isDayBefore(interval.end, rentInfoInterval.end))\n    ) {\n        visibleInterval = {...rentInfoInterval, end: interval.end}\n    }\n    if (isIntervalIncludedInAnother(rentInfoInterval, interval)) {\n        visibleInterval = {...interval}\n    }\n    return visibleInterval || rentInfoInterval\n}\n\nfunction CreateViewRentIntervals(rentInfos, interval) {\n    return rentInfos.reduce((acc, rentInfo) => {\n        const newViewRentInterval = checkAndReturnNewViewRentInterval(rentInfo.rentInterval, interval)\n        acc[rentInfo.apartmentId] = [...acc[rentInfo.apartmentId] || [], newViewRentInterval ]\n        return acc\n    }, {})\n}\n\nfunction collectObjects(apartmentsArray, rentInfos) {\n    return apartmentsArray.map(apartment => {\n        apartment.rentInfo = rentInfos.filter(rentInfo => rentInfo.apartmentId === apartment.id)\n        return apartment\n    })\n}\n\nfunction createApartments(collectionObjects) {\n    return collectionObjects.reduce((acc, apartment) => {\n        if (acc[apartment.apartmentsType]) {\n            acc[apartment.apartmentsType][apartment.id] = {...acc[apartment.apartmentsType][apartment.id], ...apartment}\n        } else {\n            acc[apartment.apartmentsType] = {}\n            acc[apartment.apartmentsType][apartment.id] = apartment\n        }\n        return acc\n    }, {})\n}\n\nexport {\n    dayOfMonth, dayOfWeek, monthName, yearOfDate, dateToString, toMonths, adjustsInterval, isSelectInterval,\n    shifterViewedRentIntervals, isDayStartRentalInterval, isArrow, widthRentElement, getTime, setTimeToDate,\n    isDayBefore, intervalLength, CreateViewRentIntervals, collectObjects, createApartments,\n    checkAndReturnNewViewRentInterval,\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {borderMix, currentCurrency, rentElementColor, rentElementsZIndex} from '../../settings/settings'\nimport {dateToString, getTime, intervalLength, widthRentElement} from './utils/utils'\nimport {Icon} from '../simpleElements/Icon'\nimport ReactTooltip from 'react-tooltip'\n\n\nconst RentWrapper = styled.div.attrs(props => ({'data-tip': '', 'data-for': props.forTooltip}))`\n  position: absolute;\n  top: 1px;\n  left: 50%;\n  border: ${borderMix(undefined, undefined, '#0237bd')};\n  background-color: ${rentElementColor};\n  width: ${props => widthRentElement(props.cellDimensions, props.viewRentInterval)};\n  min-width: ${({cellDimensions}) => cellDimensions.width / 2 - 1}px;\n  height: ${({cellDimensions}) => cellDimensions.height - 2}px;\n  z-index: ${rentElementsZIndex};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Arrow = styled(Icon)`\n  position: absolute;\n  top: 5px;\n  ${props => props.position}: -15px;\n  color: red;\n`\n\nconst FullName = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  position: absolute;\n  top: ${props => props.top ?? ''};\n  bottom: ${props => props.bottom ?? ''};\n  left: ${props => props.left ?? ''};\n  right: ${props => props.right ?? ''};\n  background-color: ${props => props.background || 'chocolate'};\n  font-size: 0.7em;\n`\n\nconst Ul = styled.ul`\n  text-align: left;\n  list-style-type: none;\n`\n\nconst TooltipSpan = styled.span`\n  color: #78e556;\n`\n\nexport function Rent(props) {\n    const {openModal, cellDimensions, viewRentInterval, isLeftArrow, isRightArrow, rentInfo} = props\n    const {\n        id,\n        rentInterval,\n        personInfo: {firstName = 'Аноним', lastName = '', email = '', phone = ''} = {},\n        additionalPersons = null,\n        tariff = '',\n        percentageDiscount = 0,\n        moneyDiscount = 0,\n        price = 0,\n        comment=''\n    } = rentInfo\n    return (\n        <>\n            <RentWrapper onClick={openModal} cellDimensions={cellDimensions} viewRentInterval={viewRentInterval} forTooltip={`${id}`}>\n                {isLeftArrow && <Arrow position={'left'}>arrow_left</Arrow>}\n                {isRightArrow && <Arrow position={'right'}>arrow_right</Arrow>}\n                <FullName>{lastName} {firstName}</FullName>\n                <Tag top={0} right={0}>{price}</Tag>\n                <Tag bottom={0} left={0} background={'#2c79dc'}>{getTime(rentInterval.start)}</Tag>\n                <Tag bottom={0} right={0} background={'#2c79dc'}>{getTime(rentInterval.end)}</Tag>\n            </RentWrapper>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" id={`${id}`}>\n                <Ul>\n                    <li>Заказ №<TooltipSpan>{id}</TooltipSpan></li>\n                    <li>Заезд: <TooltipSpan>{dateToString(rentInterval.start)}</TooltipSpan> в <TooltipSpan>{getTime(rentInterval.start)}</TooltipSpan></li>\n                    <li>Выезд: <TooltipSpan>{dateToString(rentInterval.end)}</TooltipSpan> в <TooltipSpan>{getTime(rentInterval.end)}</TooltipSpan></li>\n                    <li>Ночей: <TooltipSpan>{intervalLength(rentInterval)}</TooltipSpan></li>\n                    {lastName && firstName && <li>Гость: <TooltipSpan>{lastName} {firstName}</TooltipSpan></li>}\n                    {email && <li>Email: <TooltipSpan>{email}</TooltipSpan></li>}\n                    {phone && <li>Тел.: <TooltipSpan>{phone}</TooltipSpan></li>}\n                    {!!additionalPersons && <li>Дополнительно чел.: <TooltipSpan>{additionalPersons}</TooltipSpan></li>}\n                    {tariff && <li>Тарифф: <TooltipSpan>{tariff}</TooltipSpan></li>}\n                    {!!(percentageDiscount || moneyDiscount) && <li>Скидка: <TooltipSpan>{percentageDiscount}% ({moneyDiscount} {currentCurrency}.)</TooltipSpan></li>}\n                    {!!price && <li>Сумма: <TooltipSpan>{price} {currentCurrency}.</TooltipSpan></li>}\n                    <li>Комментарий: <TooltipSpan>{comment ? 'Да': 'Нет'}</TooltipSpan></li>\n                </Ul>\n            </ReactTooltip>\n        </>\n    )\n}","import Modal from 'react-modal'\nimport React, {useState} from 'react'\nimport style from './SettingsMenuItem.module.css'\n\n\nModal.setAppElement('#root')\n\nexport function withModal(WrappedComponent) {\n    return (props) => {\n        let [showModal, setShowModal] = useState(props.isOpenModal || false)\n        const openModal = () => setShowModal(true)\n        const closeModal = () => {\n            setShowModal(false)\n            if (props.hasOwnProperty('setIsOpenModal')) props.setIsOpenModal(false)\n        }\n\n        return (\n            <>\n                <WrappedComponent openModal={openModal} {...props} />\n                <Modal isOpen={showModal}\n                       contentLabel={'settings'}\n                       className={style.Modal}\n                       overlayClassName={style.Overlay}\n                       onRequestClose={closeModal}\n                       shouldCloseOnOverlayClick={false}\n                       shouldCloseOnEsc={true}\n                >\n                    {React.Children.map(props.children, (child) => {\n                        if (React.isValidElement(child) && typeof(child.type) !== 'string' ) {\n                            return React.cloneElement(child, {closeModal})\n                        }\n                        return child\n                    })}\n                </Modal>\n            </>\n        )\n    }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '../simpleElements/Button'\n\n\nconst ButtonsWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 5px;\n`\n\nexport function SaveCloseButtons(props) {\n    const {closeHandler, notSave} = props\n\n    return <ButtonsWrapper>\n        {!notSave && <Button type=\"submit\" size={'0.8em'}>Сохранить</Button>}\n        <Button type=\"button\" onClick={closeHandler} size={'0.8em'}> Закрыть </Button>\n    </ButtonsWrapper>\n}","import {ErrorMessage, Field, Form, Formik, useField, useFormikContext} from 'formik'\nimport {SaveCloseButtons} from './SaveCloseButtons'\nimport React, {useEffect} from 'react'\nimport {dateToString, getTime, intervalLength, setTimeToDate} from '../Table/utils/utils'\nimport {Icon} from '../simpleElements/Icon'\nimport {reversObjectProp} from '../../commonUtils/commonUtils'\nimport {currentCurrency, gridAutoRowsHeight, maxAdditionalPersons, priceAdditionalPerson} from '../../settings/settings'\nimport styled from 'styled-components'\nimport {Button} from '../simpleElements/Button'\nimport * as Yup from 'yup'\n\n\nconst LikeFormField = styled.span`\n  border-radius: 3px;\n  border: 1px solid lightgrey;\n  border-left: #43b25a 5px solid;\n  background-color: white;\n  font-size: 1.1em;\n  margin: 1em;\n  text-align: center;\n  padding: 0.2em 0.5em;\n`\n\nconst ErrorMessageElement = styled.div`\ncolor: red;\n`\n\nconst TitleWrapper = styled.div`\n  height: ${gridAutoRowsHeight}px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.2em;\n`\n\nconst Delete = styled.div`\n  float: right;\n\n  &:hover{\n    ::before{\n      content: \"${props => props.message}\";\n      color: red;\n      font-weight: bold;\n    }\n  }\n`\n\nexport function OrderCreationForm(props) {\n    const {\n        closeModal, rentInfo, setRentInfo, index, apartmentsType, apartmentId, tariffs, numberOfPersons, cancelRent,\n    } = props\n    const {\n        id=null,\n        rentInterval,\n        personInfo:{firstName='Аноним', lastName='', email='', phone=''}={},\n        additionalPersons = 0,\n        persons = 1,\n        tariff = '',\n        percentageDiscount = 0,\n        moneyDiscount = 0,\n        price = 0,\n        comment='',\n    } = rentInfo\n\n    const tariffPrice = tariffs[tariff] || tariffs[`${apartmentsType}_${numberOfPersons}`]\n    const phoneRegExp = /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/\n\n    return (\n        <Formik\n            initialValues={{\n                firstName, lastName, email, phone, additionalPersons, percentageDiscount, moneyDiscount, persons,\n                comment, price,\n                checkInTime: getTime(rentInterval.start),\n                checkOutTime: getTime(rentInterval.end),\n                tariff: tariffPrice,\n                checkIn: dateToString(rentInterval.start),\n                nights: intervalLength(rentInterval),\n                checkOut: dateToString(rentInterval.end)\n            }}\n\n            validationSchema={Yup.object({\n                firstName: Yup.string()\n                    .max(15, 'Имя доложно содержать не более 15 символов')\n                    .required('Имя доложно быть обязательно'),\n                lastName: Yup.string()\n                    .max(20, 'Фамилия должна содержать не более 20 символов')\n                    .required('Фамилия должна быть обязательно'),\n                email: Yup.string().email('E-mail не валиден').required('E-mail обязателен'),\n                phone: Yup.string().matches(phoneRegExp, 'Номер не валиден'),\n                price: Yup.string().test('', 'Сумма доложа быть положительной', value => parseFloat(value) >= 0),\n            })}\n\n            onSubmit={(values) => {\n                const newRentInfo ={\n                    rentInterval: {start: setTimeToDate(rentInterval.start, values.checkInTime), end: setTimeToDate(rentInterval.end, values.checkOutTime)},\n                    personInfo:{\n                        firstName: values.firstName,\n                        lastName: values.lastName,\n                        email: values.email,\n                        phone: values.phone\n                    },\n                    additionalPersons: values.additionalPersons,\n                    persons: values.persons,\n                    tariff: reversObjectProp(tariffs)[values.tariff],\n                    percentageDiscount: values.percentageDiscount,\n                    moneyDiscount: values.moneyDiscount,\n                    price: values.price,\n                    comment: values.comment,\n                    id: id || Math.round(Math.random()*100000000), // just for test. It's must deleted when finished transport layer. It's property created on server side. TODO: delete this!!!\n                }\n                setRentInfo(apartmentsType, index, apartmentId, newRentInfo)\n            }}\n        >\n            <Form>\n                <TitleWrapper>\n                    Создание Заказа\n                    <Delete message='Удалить сразу и навсегда! Бесповоротно! БЕЗ ДОПОЛНИТЕЛЬНЫХ ПРЕДУПРЕЖДЕНИЙ!!!'>\n                        <Button iconName={\"delete\"} background={\"red\"} type={\"button\"} onClick={()=>cancelRent(apartmentsType, index, apartmentId)} />\n                    </Delete>\n                </TitleWrapper>\n\n                <label htmlFor=\"firstName\">Имя</label>\n                <Field name=\"firstName\" type=\"text\" autoFocus={true} />\n\n                <label htmlFor=\"lastName\">Фамилия</label>\n                <Field name=\"lastName\" type=\"text\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"firstName\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"lastName\" />\n                <br/>\n                <label htmlFor=\"email\">E-mail</label>\n                <Field name=\"email\" type=\"email\" />\n\n                <label htmlFor=\"phone\">Телефон</label>\n                <Field name=\"phone\" type=\"text\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"email\" />\n                <ErrorMessage component={ErrorMessageElement} name=\"phone\" />\n\n                <hr />\n\n                <label htmlFor=\"checkIn\">Заезд</label>\n                <Field name=\"checkIn\" type=\"text\" readOnly/>\n\n                <label htmlFor=\"checkInTime\" />\n                <Field name=\"checkInTime\" type=\"time\" />\n\n                <label htmlFor=\"nights\">Ночей</label>\n                <Field name=\"nights\" type=\"text\" size=\"4\" readOnly/>\n\n                <label htmlFor=\"checkOut\">Выезд</label>\n                <Field name=\"checkOut\" type=\"text\" readOnly/>\n\n                <label htmlFor=\"checkOutTime\"/>\n                <Field name=\"checkOutTime\" type=\"time\" />\n\n                <hr />\n\n                <label htmlFor=\"persons\" title={`от 1 до ${numberOfPersons}`}>\n                    <Icon>group</Icon>\n                </label>\n                <Field name=\"persons\" type=\"number\" min={1} max={numberOfPersons} title={`от 1 до ${numberOfPersons}`}/>\n\n                <label htmlFor=\"additionalPersons\">\n                    <Icon>group_add</Icon>\n                </label>\n                <Field name=\"additionalPersons\" as=\"select\">\n                    {[...Array(maxAdditionalPersons).keys()].map(num => <option value={num} key={num}>{num}</option> )}\n                </Field>\n                <InfoFormField fieldName={'additionalPersons'} isAdditionalPersons/>\n\n                <hr />\n\n                <label htmlFor=\"tariff\">Тариф</label>\n                <Field name=\"tariff\" as=\"select\">\n                    {Object.keys(tariffs).map(tariff => <option value={tariffs[tariff]} key={tariff}>{tariff}</option>)}\n                </Field>\n                <InfoFormField fieldName={'tariff'} />\n\n                <label htmlFor=\"percentageDiscount\">Скидка %</label>\n                <Field name=\"percentageDiscount\" type=\"number\" min={0} max={100}/>\n\n                <label htmlFor=\"moneyDiscount\">Скидка</label>\n                <Field name=\"moneyDiscount\" type=\"number\" min={0} />\n                <span>{currentCurrency}</span>\n\n                <hr />\n\n                <label htmlFor=\"price\">Сумма</label>\n                <PriceField name=\"price\" type=\"text\" rentInterval={rentInterval} readOnly />\n\n                <hr />\n\n                <label htmlFor=\"comment\">Комментрий :</label>\n                <Field name=\"comment\" as=\"textarea\" rows={5} cols={70}/>\n\n                <SaveCloseButtons closeHandler={closeModal}/>\n            </Form>\n        </Formik>\n    )\n}\n\nfunction InfoFormField(props){\n    const {fieldName, isAdditionalPersons} = props\n    let {values:{[fieldName]: field}, } = useFormikContext()\n    const personsAddsSum = field * priceAdditionalPerson || false\n    return (\n        <>\n            {isAdditionalPersons && personsAddsSum && <>=<LikeFormField>{personsAddsSum} {currentCurrency}</LikeFormField></>}\n            {!isAdditionalPersons && <>=<LikeFormField>{field} {currentCurrency}</LikeFormField></>}\n        </>\n    )\n}\n\nfunction getPrice(days, tariff=0, additionalPersons) {\n    additionalPersons=Number(additionalPersons) || 0\n    tariff=Number(tariff) || 0\n    const price = days * tariff + additionalPersons * priceAdditionalPerson\n\n    return Number(price.toFixed(2))\n}\n\nfunction PriceField(props) {\n    const {rentInterval, name, ...restProps} = props\n    const {\n        values:{\n            tariff,\n            percentageDiscount,\n            moneyDiscount,\n            additionalPersons,\n        },\n        setFieldValue,\n    } = useFormikContext()\n    const [field, meta] = useField(name)\n\n    useEffect(() => {\n        const price = getPrice(intervalLength(rentInterval), tariff, additionalPersons)\n        const moneyDiscountCalc = Number((price * percentageDiscount/100).toFixed(2)) || moneyDiscount\n\n        setFieldValue(name, `${price-moneyDiscountCalc} ${currentCurrency}`)\n        setFieldValue('moneyDiscount', moneyDiscountCalc)\n\n    }, [tariff, percentageDiscount, additionalPersons, moneyDiscount, rentInterval, name]);\n\n    return (\n        <>\n            <input {...restProps} {...field} />\n            {!!meta.touched && !!meta.error && <ErrorMessageElement>{meta.error}</ErrorMessageElement>}\n        </>\n    )\n}","export function convertArrayOfObjectsToObjectOfObjects (key, array) {\n    return array.reduce((acc, itemObj) => {\n        acc[itemObj[key]] = itemObj\n        return acc\n    }, {})\n}\n\nexport function convertObjectWithArraysToObjectWithObjects (key, object) {\n    return Object.keys(object).reduce((acc, objKey) => {\n        acc[objKey] = convertArrayOfObjectsToObjectOfObjects(key, object[objKey])\n        return acc\n    }, {})\n}\n\nexport function reversObjectProp(obj) {\n    return Object.keys(obj).reduce((acc, objKey) => {\n        acc[obj[objKey]] = objKey\n        return acc\n    }, {})\n}\n\nexport function CreateViewRentIntervals(apartments) {\n    return Object.keys(apartments).reduce((acc, apartmentType) => {\n        for (const apartment of apartments[apartmentType]) {\n            let arr=[]\n            for (const itemRentInfo of apartment.rentInfo) {\n                arr.push(itemRentInfo.rentInterval)\n            }\n            if(arr.length) acc[apartment.id] = arr\n        }\n        return acc\n    }, {})\n}","import React from 'react'\nimport styled from 'styled-components'\nimport {TodayMarker} from '../../simpleElements/TodayMarker'\nimport {Rent} from '../Rent'\nimport {border, selectionColor, weekendColor} from '../../../settings/settings'\nimport {withModal} from '../../Modal/withModal'\nimport {OrderCreationForm} from '../../Forms/OrderCreationForm'\n\n\nconst CellWrapper = styled.div.attrs(props =>\n    ({'data-date': props.date, 'data-apartment_id': props.apartmentId, 'data-apartments_type': props.apartmentsType}))`\n  position: relative;\n  text-align: center;\n  user-select: none;\n  border: ${props => props.isSelect ? 'none' : border};\n  background-color: ${props => props.isSelect ? selectionColor : props.isWeekend ? weekendColor : 'inherit'};\n  cursor: ${props => props.isSelect ? 'cell' : null};\n`\n\nconst TopString = styled.span`\n  color: midnightblue;\n  font-weight: ${props => props.topStringFontWeight || 'bold'};\n`\n\nconst BottomString = styled.span`\n  color: gray;\n  font-weight: ${props => props.bottomStringFontWeight || 'bold'};\n`\n\nconst ModalRent = withModal(Rent)\n\nexport function TableCell(props) {\n    const {\n        isWeekend, date, apartmentId, isSelect, apartmentsType, isToday, isRent, isLeftArrow, isRightArrow,\n        rentInfo, setRentInfo, index, tariffs, numberOfPersons, isOpenModal, setIsOpenModal, cancelRent,\n    } = props\n\n    const topString = props.topString ? <TopString>{props.topString}</TopString> : null\n    const bottomString = props.bottomString ? <BottomString>{props.bottomString}</BottomString> : null\n\n    return (\n        <CellWrapper\n            isWeekend={isWeekend}\n            date={date}\n            apartmentId={apartmentId}\n            isSelect={isSelect}\n            apartmentsType={apartmentsType}\n        >\n            {isToday && <TodayMarker/>}\n            {isRent &&\n            <ModalRent\n                cellDimensions={props.cellDimensions}\n                viewRentInterval={isRent}\n                isLeftArrow={isLeftArrow}\n                isRightArrow={isRightArrow}\n                rentInfo={rentInfo}\n                isOpenModal={isOpenModal}\n                setIsOpenModal={setIsOpenModal}\n            >\n                <OrderCreationForm\n                    rentInfo={rentInfo}\n                    setRentInfo={setRentInfo}\n                    index={index}\n                    apartmentsType={apartmentsType}\n                    tariffs={tariffs}\n                    apartmentId={apartmentId}\n                    numberOfPersons={numberOfPersons}\n                    cancelRent={cancelRent}\n                />\n            </ModalRent>}\n            {topString}\n            <br/>\n            {bottomString}\n        </CellWrapper>\n    )\n}","import React from 'react'\n\n\nexport function TableRow({rowTitle, rowCells}) {\n    let firstCell\n\n    if (rowTitle) {\n        if (typeof rowTitle === 'object') {\n            firstCell = rowTitle\n        } else {\n            firstCell = <div>{rowTitle}</div>\n        }\n    }\n\n    return (\n        <>\n            {firstCell} {rowCells}\n        </>\n    \n    )\n}","import React, {useState} from 'react'\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport {ru} from 'date-fns/locale'\n\n\nconst WEEKDAYS_SHORT = {\n    ru: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n}\n\nconst MONTHS = {\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n}\n\nconst WEEKDAYS_LONG = {\n    ru: [\n        'Воскресенье',\n        'Понедельник',\n        'Вторник',\n        'Среда',\n        'Четверг',\n        'Пятница',\n        'Суббота',\n    ],\n}\n\nconst FIRST_DAY_OF_WEEK = {\n    ru: 1,\n}\n\nconst LABELS = {\n    ru: { nextMonth: 'следующий месяц', previousMonth: 'предыдущий месяц' },\n}\n\nfunction parseDate(str, format, locale) {\n    const parsed = dateFnsParse(str, format, new Date(), { locale })\n    if (DateUtils.isDate(parsed)) {\n        return parsed\n    }\n    return undefined\n}\n\nfunction formatDate(date, format, locale) {\n    return dateFnsFormat(date, format, { locale })\n}\n\nexport function DatePicker(props) {\n    const [state, setState] = useState({selectedDay: props.fromDay, isEmpty: !props.fromDay})\n\n    function handleDayChange(selectedDay, modifiers, dayPickerInput) {\n        const input = dayPickerInput.getInput();\n        setState({selectedDay, isEmpty: !input.value.trim()})\n    }\n\n    function handleDayPickerHide({selectedDay, isEmpty}, {shiftFrom}) {\n        if (selectedDay && !isEmpty) shiftFrom(selectedDay)\n    }\n\n    const FORMAT = 'dd-MM-yyyy';\n    const locale = 'ru'\n    return (\n            <DayPickerInput\n                dayPickerProps={{\n                    todayButton: 'Сегодня',\n                    locale: ru,\n                    months: MONTHS[locale],\n                    weekdaysLong: WEEKDAYS_LONG[locale],\n                    weekdaysShort: WEEKDAYS_SHORT[locale],\n                    firstDayOfWeek: FIRST_DAY_OF_WEEK[locale],\n                    labels: LABELS[locale],\n                }}\n                formatDate={formatDate}\n                format={FORMAT}\n                parseDate={parseDate}\n                placeholder={`${dateFnsFormat(props.fromDay, FORMAT)}`}\n                selectedDay={props.fromDay}\n                value={props.fromDay}\n                keepFocus={false}\n                inputProps={{name: props.name, type: props.type}}\n                onDayChange={handleDayChange}\n                onDayPickerHide={()=>handleDayPickerHide(state, props)}\n            />\n    )\n}\n","import {Button} from '../../simpleElements/Button'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {DatePicker} from './DatePicker'\nimport {border} from '../../../settings/settings'\n\n\nconst Wrapper = styled.div`\n  grid-row: 1/3;\n  border: ${border};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`\n\nconst DateChoiceWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst ColumnTitle = styled.div`\ntext-align: center;\n`\n\nexport function FirstHeaderCell(props) {\n    const {shiftFrom, fromDay, onClick} = props\n\n    return (\n        <Wrapper>\n            <DateChoiceWrapper>\n                <DatePicker shiftFrom={shiftFrom} fromDay={fromDay}/>\n                <Button iconName={\"schedule\"} onClick={onClick} isFlex/>\n            </DateChoiceWrapper>\n            <ColumnTitle>Номера</ColumnTitle>\n        </Wrapper>\n    )\n}","import React from 'react'\nimport {TableCell} from './Table-cell/TableCell'\nimport {eachMonthOfInterval, isToday, isWeekend} from 'date-fns'\nimport {TableRow} from './TableRow'\nimport {dayOfMonth, dayOfWeek, toMonths} from './utils/utils'\nimport {FirstHeaderCell} from './Table-cell/FirstHeaderCell'\n\n\nexport function TableHeader({interval, days, ...props}) {\n    const shiftLeft = props.shiftDateIntervalLeft\n    const shiftRight = props.shiftDateIntervalRight\n    const shiftNow = props.shiftDateIntervalNow\n    const shiftFrom = props.shiftDateIntervalFrom\n\n    const months = eachMonthOfInterval(interval)\n\n    const headerDaysCells = days.map(day =>\n        <TableCell\n            topString={dayOfMonth(day)}\n            bottomString={dayOfWeek(day)}\n            isWeekend={isWeekend(day)}\n            isToday={isToday(day)}\n            key={day}\n        />)\n\n    const monthsCells = months.map(toMonths(interval, months, shiftLeft, shiftRight))\n\n    return (\n        <>\n            <FirstHeaderCell onClick={shiftNow} shiftFrom={shiftFrom} fromDay={interval.start}/>\n            <TableRow rowCells={monthsCells}/>\n            <TableRow rowCells={headerDaysCells}/>\n        </>\n    )\n}","import React, {useEffect} from 'react'\nimport {isSameDay, isWeekend, isWithinInterval,} from 'date-fns'\nimport {TableCell} from './Table-cell/TableCell'\nimport {\n    dayOfMonth,\n    isArrow,\n    isDayBefore,\n    isDayStartRentalInterval,\n    isSelectInterval\n} from './utils/utils'\nimport {TableRow} from './TableRow'\nimport styled from 'styled-components'\nimport {border, displayFlexAlignCenter, weekendColor} from '../../settings/settings'\n\n\nconst Cell = styled.div`\n  ${displayFlexAlignCenter};\n  border: ${border};\n  justify-content: ${({position}) => position ? position : 'center'};\n  background-color: ${({isWeekend}) => isWeekend ? weekendColor : 'inherit'};\n  font-weight: ${({weight}) => weight ? weight : 600};\n  padding-left: ${({position}) => position ? '1em' : null};\n`\n\nexport function TableBody(props) {\n    const {\n        days, apartments, selectInterval, apartmentId, cellDimensions, viewRentIntervals,\n        leftSideShiftLeftViewRentInterval, leftSideShiftRightViewRentInterval, rightSideShiftLeftViewRentInterval,\n        rightSideShiftRightViewRentInterval, setRentInfo, tariffs, isOpenModal, setIsOpenModal, cancelRent, interval,\n        freeApartments,\n    } = props\n\n    const freeApartmentsCells = (apartmentsByType) => {\n        return freeApartments[apartmentsByType].map(obj => <Cell isWeekend={isWeekend(obj.day)} weight={800} key={obj.day}> {obj.freeApartments} </Cell>)\n    }\n\n    return (\n        <>\n            {Object.keys(apartments).map(apartmentsType =>\n                <React.Fragment key={apartmentsType}>\n                    <TableRow rowCells={freeApartmentsCells(apartmentsType)} rowTitle={<Cell>{apartmentsType}</Cell>}/>\n                    <ApartmentsRowsByNumbers\n                        days={days}\n                        apartmentsByType={apartments[apartmentsType]}\n                        apartmentsType={apartmentsType}\n                        apartmentIdForSelect={apartmentId}\n                        selectInterval={selectInterval}\n                        cellDimensions={cellDimensions}\n                        viewRentIntervals={viewRentIntervals}\n                        leftSideShiftLeftViewRentInterval={leftSideShiftLeftViewRentInterval}\n                        leftSideShiftRightViewRentInterval={leftSideShiftRightViewRentInterval}\n                        rightSideShiftLeftViewRentInterval={rightSideShiftLeftViewRentInterval}\n                        rightSideShiftRightViewRentInterval={rightSideShiftRightViewRentInterval}\n                        setRentInfo={setRentInfo}\n                        tariffs={tariffs}\n                        isOpenModal={isOpenModal}\n                        setIsOpenModal={setIsOpenModal}\n                        cancelRent={cancelRent}\n                        interval={interval}\n                    />\n                </React.Fragment>)}\n        </>\n    )\n}\n\nfunction ApartmentsRowsByNumbers(props) {\n    const {\n        days, apartmentsByType, apartmentsType, apartmentIdForSelect, selectInterval, cellDimensions, viewRentIntervals,\n        leftSideShiftLeftViewRentInterval, leftSideShiftRightViewRentInterval, rightSideShiftLeftViewRentInterval,\n        rightSideShiftRightViewRentInterval, setRentInfo, tariffs, isOpenModal, setIsOpenModal, cancelRent, interval,\n    } = props\n\n    useEffect(() => {\n        Object.keys(viewRentIntervals).forEach(id => {\n            if (id in apartmentsByType) {\n                for (let i = 0; i < viewRentIntervals[id]?.length; i++) {\n                        const {start, end} = viewRentIntervals[id][i]\n                    if (isWithinInterval(start, interval) || isWithinInterval(end, interval)) {\n                        const apartmentRentInterval = apartmentsByType[id].rentInfo[i].rentInterval\n                        const firstTableDay = days[0]\n                        const lastTableDay = days[days.length - 1]\n\n                        if (!isSameDay(start, end) && isDayBefore(start, firstTableDay)) {\n                            leftSideShiftLeftViewRentInterval(id, i)\n                        }\n                        if (!isSameDay(lastTableDay, end) && isDayBefore(lastTableDay, end)) {\n                            rightSideShiftLeftViewRentInterval(id, i)\n                        }\n                        if (!isSameDay(start, apartmentRentInterval?.start) && isDayBefore(firstTableDay, start)) {\n                            leftSideShiftRightViewRentInterval(id, i)\n                        }\n                        if (!isSameDay(end, apartmentRentInterval?.end) && isDayBefore(end, lastTableDay)) {\n                            rightSideShiftRightViewRentInterval(id, i)\n                        }\n                    }\n\n                }\n            }\n        })\n    }, [days, viewRentIntervals, apartmentsByType])\n\n    function bodyDaysCells(id, apartmentsType, days) {\n        return days.map(day => {\n            let [isRent, index] = isDayStartRentalInterval(viewRentIntervals[id], day) || [false, false]\n            return <TableCell\n                bottomString={dayOfMonth(day)}\n                isWeekend={isWeekend(day)}\n                date={day}\n                key={day}\n                isRent={isRent}\n                apartmentId={id}\n                apartmentsType={apartmentsType}\n                cellDimensions={cellDimensions}\n                rentInfo={apartmentsByType[id]?.rentInfo[index]}\n                index={index}\n                isSelect={isSelectInterval(selectInterval, day, apartmentIdForSelect, id)}\n                isLeftArrow={isArrow(viewRentIntervals, apartmentsByType, id, index, 'start')}\n                isRightArrow={isArrow(viewRentIntervals, apartmentsByType, id, index, 'end')}\n                setRentInfo={setRentInfo}\n                tariffs={tariffs}\n                numberOfPersons={apartmentsByType[id].numberOfPersons}\n                isOpenModal={isOpenModal}\n                setIsOpenModal={setIsOpenModal}\n                cancelRent={cancelRent}\n            />\n        })\n    }\n\n    return (\n        <>\n            {Object.keys(apartmentsByType)\n                .sort((a,b)=>apartmentsByType[a].numberOfPersons - apartmentsByType[b].numberOfPersons)\n                .map(apartmentId => {\n                return (\n                    <React.Fragment key={apartmentId}>\n                        <Cell position={'flex-start'} weight={500}\n                              key={apartmentsByType[apartmentId].apartmentsNumber}\n                        >\n                            {apartmentsByType[apartmentId].apartmentsNumber} ({apartmentsByType[apartmentId].numberOfPersons})\n                        </Cell>\n                        {bodyDaysCells(apartmentId, apartmentsType, days)}\n                    </React.Fragment>)\n            })}\n        </>\n    )\n}\n","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://my-json-server.typicode.com/Alex-Kharin/hotelms-clone-db',\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n})\n\nexport const apartmentsApi = {\n    getApartments() {\n        return instance.get(`apartments`).then(response => response.data)\n    },\n\n    getRentInfo() {\n        return instance.get(`rentInfo`).then(response => response.data)\n    }\n\n\n}","import {addDays, areIntervalsOverlapping, subDays} from 'date-fns'\nimport {\n    adjustsInterval,\n    collectObjects,\n    createApartments,\n    CreateViewRentIntervals,\n    shifterViewedRentIntervals\n} from '../components/Table/utils/utils'\nimport {borderWidth, gridAutoRowsHeight, gridColumnsWidth, tariffs} from '../settings/settings'\nimport {apartmentsApi} from '../api/api'\n\n\nconst APARTMENTS = 'APARTMENTS'\nconst VIEW_RENT_INTERVALS = 'VIEW_RENT_INTERVALS'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst IS_SELECT = 'IS_SELECT'\nconst START_SELECTION_INTERVAL = 'START_SELECTION_INTERVAL'\nconst END_SELECTION_INTERVAL = 'END_SELECTION_INTERVAL'\nconst CLEAR_SELECTED_DAYS = 'CLEAR_SELECTED_DAYS'\nconst APARTMENT_ID = 'APARTMENT_ID'\nconst RENT_INTERVAL = 'RENT_INTERVAL'\nconst LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL = 'LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL'\nconst LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL = 'LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL'\nconst RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL = 'RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL'\nconst RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL = 'RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL'\nconst RENT_INFO = 'RENT_INFO'\nconst OPEN_MODAL = 'OPEN_MODAL'\nconst CANCEL_RENT = 'CANCEL_RENT'\n\n\nconst initialState = {\n    apartments: {},\n    tariffs,\n    isFetching: true,\n    isSelect: false,\n    isOpenModal: false,\n    selectInterval: {start: null, end: null},\n    apartmentId: null,\n    cellDimensions:{\n        width: gridColumnsWidth - 2 * borderWidth,\n        height: gridAutoRowsHeight - 2 * borderWidth\n    },\n    viewRentIntervals: {},\n}\n\n\nfunction tableApartmentsReducer(state = initialState, action) {\n    switch (action.type) {\n        case APARTMENTS: {\n            return {\n                ...state,\n                apartments: action.apartments\n            }\n        }\n        case VIEW_RENT_INTERVALS: {\n            return {\n                ...state,\n                viewRentIntervals: action.viewRentIntervals\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case IS_SELECT: {\n            return {\n                ...state,\n                isSelect: action.isSelect\n            }\n        }\n        case START_SELECTION_INTERVAL: {\n            return {\n                ...state,\n                selectInterval: {start: action.startSelection, end: action.startSelection}\n            }\n        }\n        case END_SELECTION_INTERVAL: {\n            return {\n                ...state,\n                selectInterval: {...state.selectInterval, end: action.endSelection}\n            }\n        }\n        case APARTMENT_ID: {\n            return {\n                ...state,\n                apartmentId: action.apartmentId,\n            }\n        }\n        case CLEAR_SELECTED_DAYS: {\n            return {\n                ...state,\n                selectInterval: {},\n            }\n        }\n        case RENT_INTERVAL: {\n            const rentInfo = state.apartments[action.apartmentsType][state.apartmentId].rentInfo\n            if (rentInfo.some(item => areIntervalsOverlapping(item.rentInterval, action.rentInterval))) return state\n\n            return {\n                ...state,\n                apartments: {\n                    ...state.apartments, [action.apartmentsType]: {\n                        ...state.apartments[action.apartmentsType],\n                        [state.apartmentId]: {\n                            ...state.apartments[action.apartmentsType][state.apartmentId],\n                            rentInfo: [...state.apartments[action.apartmentsType][state.apartmentId].rentInfo, {rentInterval: action.rentInterval}]\n                        }\n                    }\n                },\n                viewRentIntervals: {\n                    ...state.viewRentIntervals,\n                    [state.apartmentId]: [...state.viewRentIntervals[state.apartmentId] || [], action.rentInterval]\n                }\n            }\n        }\n        case LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'start', addDays)\n        }\n        case LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'start', subDays)\n        }\n        case RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'end', subDays)\n        }\n        case RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL: {\n            return shifterViewedRentIntervals(state, action, 'end', addDays)\n        }\n        case RENT_INFO: {\n            state = {...state }\n            state.apartments = {...state.apartments}\n            state.apartments[action.apartmentsType] = {...state.apartments[action.apartmentsType]}\n            state.apartments[action.apartmentsType][action.apartmentId]={...state.apartments[action.apartmentsType][action.apartmentId]}\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo = [...state.apartments[action.apartmentsType][action.apartmentId].rentInfo]\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo[action.index] = action.rentInfo\n            return state\n        }\n        case OPEN_MODAL: {\n            return {\n                ...state,\n                isOpenModal: action.isOpenModal\n            }\n        }\n        case CANCEL_RENT: {\n            state = {...state }\n            state.apartments = {...state.apartments}\n            state.apartments[action.apartmentsType] = {...state.apartments[action.apartmentsType]}\n            state.apartments[action.apartmentsType][action.apartmentId]={...state.apartments[action.apartmentsType][action.apartmentId]}\n            state.apartments[action.apartmentsType][action.apartmentId].rentInfo=\n                state.apartments[action.apartmentsType][action.apartmentId].rentInfo.filter((_, index) => index !== action.index)\n\n            state.viewRentIntervals = {...state.viewRentIntervals}\n            state.viewRentIntervals[action.apartmentId] = state.viewRentIntervals[action.apartmentId].filter((_, index)=> index !== action.index)\n            return state\n        }\n        default:\n            return state\n    }\n}\n\nconst setApartments = (apartments) => ({type: APARTMENTS, apartments})\nconst setViewRentIntervals = (viewRentIntervals) => ({type: VIEW_RENT_INTERVALS, viewRentIntervals})\nconst toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nconst setSelecting = (isSelect) => ({type: IS_SELECT, isSelect})\nconst setIsOpenModal = (isOpenModal) => ({type: OPEN_MODAL, isOpenModal})\nconst setStartSelection = (startSelection) => ({type: START_SELECTION_INTERVAL, startSelection})\nconst setEndSelection = (endSelection) => ({type: END_SELECTION_INTERVAL, endSelection})\nconst setApartmentId = (apartmentId) => ({type: APARTMENT_ID, apartmentId})\nconst clearSelectedDays = () => ({type: CLEAR_SELECTED_DAYS})\nconst leftSideShiftLeftViewRentInterval = (apartmentId, index) => ({\n    type: LEFT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst leftSideShiftRightViewRentInterval = (apartmentId, index) => ({\n    type: LEFT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst rightSideShiftLeftViewRentInterval = (apartmentId, index) => ({\n    type: RIGHT_SIDE_SHIFT_LEFT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst rightSideShiftRightViewRentInterval = (apartmentId, index) => ({\n    type: RIGHT_SIDE_SHIFT_RIGHT_VIEW_RENT_INTERVAL,\n    apartmentId, index\n})\nconst setRentInterval = (apartmentsType, rentInterval) => ({\n    type: RENT_INTERVAL,\n    apartmentsType,\n    rentInterval\n})\nconst setRentInfo = (apartmentsType, index, apartmentId, rentInfo) => ({\n    type: RENT_INFO,\n    apartmentsType,\n    index,\n    apartmentId,\n    rentInfo\n})\nconst cancelRent = (apartmentsType, index, apartmentId) => ({\n    type: CANCEL_RENT,\n    apartmentsType,\n    index,\n    apartmentId\n})\n\nfunction requestApartments() {\n    return async (dispatch, getState) => {\n        dispatch(toggleIsFetching(true))\n\n        const apartmentsArray = await apartmentsApi.getApartments()\n        const rentInfos = await apartmentsApi.getRentInfo()\n\n        rentInfos.forEach(rentInfo => {\n            rentInfo.rentInterval.start = new Date(rentInfo.rentInterval.start)\n            rentInfo.rentInterval.end = new Date(rentInfo.rentInterval.end)\n            rentInfo.rentInterval = adjustsInterval(rentInfo.rentInterval)\n        })\n\n        const collection = collectObjects(apartmentsArray, rentInfos)\n        const apartments = createApartments(collection)\n        const viewRentIntervals = CreateViewRentIntervals(rentInfos, getState().table.interval)\n\n        dispatch(setApartments(apartments))\n        dispatch(setViewRentIntervals(viewRentIntervals))\n        dispatch(toggleIsFetching(false))\n    }\n\n}\n\n\nexport {\n    tableApartmentsReducer,\n    setSelecting,\n    setStartSelection,\n    setEndSelection,\n    setApartmentId,\n    clearSelectedDays,\n    setRentInterval,\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setRentInfo,\n    setIsOpenModal,\n    cancelRent,\n    requestApartments,\n\n}\n\n\n\n\n","import {createSelector} from 'reselect'\nimport {areIntervalsOverlapping, eachDayOfInterval, isSameDay, set} from 'date-fns'\nimport {time} from '../settings/settings'\n\nexport const getApartments = (state) => state.tableApartments.apartments\nexport const getViewRentIntervals = (state) => state.tableApartments.viewRentIntervals\nexport const getCellDimensions = (state) => state.tableApartments.cellDimensions\nexport const getTariffs = (state) => state.tableApartments.tariffs\nexport const getIsOpenModal = (state) => state.tableApartments.isOpenModal\nexport const getIsFetching = (state) => state.tableApartments.isFetching\nexport const getDays = (state) => eachDayOfInterval(state.table.interval).map(day=>set(day, time))\n\nexport const getFreeApartments = createSelector(\n    getApartments,\n    getDays,\n    (apartments, days) => {\n\n        return Object.keys(apartments).reduce((acc, apartmentType) => {\n\n            for (let i = 0; i < days.length; i++) {\n                let freeApartments = Object.keys(apartments[apartmentType]).length\n                let day = days[i]\n                Object.values(apartments[apartmentType]).forEach(apartment => {\n                    if (apartment.rentInfo.some(item => areIntervalsOverlapping({\n                                start: day,\n                                end: day\n                            }, item.rentInterval, {inclusive: false}) ||\n                            (isSameDay(day, item.rentInterval.end) && apartment.rentInfo.some(element => isSameDay(day, element.rentInterval.start)))\n                    )) {\n                        freeApartments--\n                    }\n\n                })\n                acc[apartmentType] = [...acc[apartmentType] || [], {freeApartments, day}]\n            }\n\n            return acc\n        }, {})\n\n    }\n)","export default __webpack_public_path__ + \"static/media/preloader.ea356991.svg\";","import React from 'react'\nimport preloader from '../../assets/images/preloader.svg'\nimport styled from 'styled-components'\nimport {displayFlexAlignCenter} from '../../settings/settings'\n\n\nconst PreloaderWrapper = styled.div`\n  grid-column: 1/-1;\n  ${displayFlexAlignCenter};\n  justify-content: center;\n`\n\nexport const Preloader = () => {\n    return <PreloaderWrapper>\n        <img src={preloader} alt='preload...'/>\n    </PreloaderWrapper>\n}","import {connect} from 'react-redux'\nimport {TableBody} from './TableBody'\nimport {\n    cancelRent,\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    requestApartments,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setIsOpenModal,\n    setRentInfo\n} from '../../store/tableApartmentsReducer'\nimport {\n    getApartments,\n    getCellDimensions, getDays,\n    getFreeApartments,\n    getIsFetching,\n    getIsOpenModal,\n    getTariffs,\n    getViewRentIntervals\n} from '../../store/tableBodyContainerSelectors'\nimport {useEffect} from 'react'\nimport {Preloader} from '../simpleElements/Preloader'\n\n\nexport function TableBodyContainer(props) {\n    const {isFetching, requestApartments} = props\n\n    useEffect(()=>{\n        if (isFetching) {\n            requestApartments()\n        }\n    }, [isFetching])\n\n    return(\n        <>\n            {isFetching && <Preloader/>}\n            {!isFetching && <TableBody {...props} />}\n        </>\n    )\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        interval: ownProps.interval,\n        selectInterval: ownProps.selectInterval,\n        apartmentId: ownProps.apartmentId,\n        days: getDays(state),\n        apartments: getApartments(state),\n        cellDimensions: getCellDimensions(state),\n        viewRentIntervals: getViewRentIntervals(state),\n        tariffs: getTariffs(state),\n        isOpenModal: getIsOpenModal(state),\n        isFetching: getIsFetching(state),\n        freeApartments: getFreeApartments(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    leftSideShiftLeftViewRentInterval,\n    leftSideShiftRightViewRentInterval,\n    rightSideShiftLeftViewRentInterval,\n    rightSideShiftRightViewRentInterval,\n    setRentInfo,\n    setIsOpenModal,\n    cancelRent,\n    requestApartments,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableBodyContainer)\n","import React from 'react'\nimport {TableHeader} from './TableHeader'\nimport styled from 'styled-components'\nimport {adjustsInterval} from './utils/utils'\nimport {isSameDay} from 'date-fns'\nimport TableBodyContainer from './TableBodyContainer'\nimport {gridAutoRowsHeight, gridColumnsWidth, gridTemplateFirstColumnWidth} from '../../settings/settings'\n\n\nconst TableWrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${gridTemplateFirstColumnWidth} repeat(${props => props.daysInTable}, ${gridColumnsWidth}px);\n  grid-auto-rows: minmax(${gridAutoRowsHeight}px, auto);\n  margin: 10px 10px -9px 10px;\n`\n\nexport function Table(props) {\n\n    const {days, interval, setApartmentId, setSelecting, setStartSelection,\n        selectInterval, setRentInterval, clearSelectedDays, isSelect, apartmentId, setEndSelection,\n        daysInTable, setIsOpenModal,\n    } = props\n\n    function handleSelect(event) {\n        const target = event.target.closest('div')\n        const dayStr = target.dataset.date\n        if (dayStr) {\n            const day = new Date(dayStr)\n\n            if (event.type === 'mousedown') {\n                setApartmentId(target.dataset.apartment_id)\n                setSelecting(true)\n                setStartSelection(day)\n            } else if (event.type === 'mouseup') {\n                if (selectInterval.start\n                    && selectInterval.end\n                    && !isSameDay(selectInterval.start, selectInterval.end)\n                    && target.dataset.apartment_id === apartmentId)\n                {\n                    setRentInterval(target.dataset.apartments_type, adjustsInterval(selectInterval))\n                    setIsOpenModal(true)\n                }\n                clearSelectedDays()\n                setSelecting(false)\n            }\n        }\n    }\n\n    function updateSelection(event) {\n        if (isSelect && event.target.dataset.apartment_id === apartmentId) {\n            let target = event.target\n            let dayStr = target.dataset.date\n\n            if (dayStr) {\n                const day = new Date(dayStr)\n                setEndSelection(day)\n            }\n        }\n    }\n\n    return (\n        <>\n            <TableWrapper daysInTable={daysInTable + 1}>\n                <TableHeader {...props} interval={interval} days={days}/>\n            </TableWrapper>\n\n            <TableWrapper daysInTable={daysInTable + 1}\n                          onMouseDown={handleSelect}\n                          onMouseUp={handleSelect}\n                          onMouseOver={updateSelection}\n            >\n                <TableBodyContainer selectInterval={selectInterval}\n                                    apartmentId={apartmentId}\n                                    interval={interval}\n                />\n            </TableWrapper>\n        </>\n    )\n}\n","import {addDays, set, subDays} from 'date-fns'\nimport {time} from '../settings/settings'\n\nconst SHIFT_LEFT = 'SHIFT_LEFT'\nconst SHIFT_RIGHT = 'SHIFT_RIGHT'\nconst SHIFT_NOW = 'SHIFT_NOW'\nconst SHIFT_FROM = 'SHIFT_FROM'\nconst DAYS_IN_TABLE = 'DAYS_IN_TABLE'\n\nconst from = set(new Date(),time)\nconst to = addDays(from, 29)\n\nconst initialState ={\n    daysInTable: 29,\n    interval: {start: from, end: to}\n}\n\nfunction tableReducer(state=initialState, action){\n    switch (action.type) {\n        case SHIFT_LEFT: {\n            const start = addDays(state.interval.start, 1)\n            const end = addDays(state.interval.end, 1)\n            return {\n                ...state,\n                interval: {start, end},\n            }\n        }\n        case SHIFT_RIGHT: {\n            const start = subDays(state.interval.start, 1)\n            const end = subDays(state.interval.end, 1)\n            return {\n                ...state,\n                interval: {start, end},\n            }\n        }\n        case SHIFT_NOW: {\n            const end = addDays(from, state.daysInTable)\n            return {\n                ...state,\n                interval: {start: from, end}\n            }\n        }\n        case SHIFT_FROM: {\n            const start = action.from\n            const end = addDays(start, state.daysInTable)\n            return {\n                ...state,\n                interval: {start, end}\n            }\n        }\n        case DAYS_IN_TABLE: {\n            const end = addDays(state.interval.start, action.days)\n            return {\n                ...state,\n                daysInTable: action.days,\n                interval: {...state.interval, end}\n            }\n        }\n    \n        default: return state\n    }\n}\n\nconst shiftDateIntervalLeft = () => ({type: SHIFT_LEFT})\nconst shiftDateIntervalRight = () => ({type: SHIFT_RIGHT})\nconst shiftDateIntervalFrom = (FromDay) => ({type: SHIFT_FROM, from: FromDay})\nconst shiftDateIntervalNow = () => ({type: SHIFT_NOW})\nconst changeDaysInTable = (days) => ({type: DAYS_IN_TABLE, days})\n\nexport {tableReducer, shiftDateIntervalLeft, shiftDateIntervalRight, shiftDateIntervalFrom, shiftDateIntervalNow, changeDaysInTable}\n\n\n\n\n","import {createSelector} from 'reselect'\nimport {adjustsInterval} from '../components/Table/utils/utils'\n\n\nexport const getInterval = (state) => state.table.interval\nexport const getDaysInTable = (state) => state.table.daysInTable\nexport const getIsSelect = (state) => state.tableApartments.isSelect\nexport const getApartmentId = (state) => state.tableApartments.apartmentId\nexport const getSelectIntervalSelector = (state) => state.tableApartments.selectInterval\n\nexport const getSelectInterval = createSelector(\n    getSelectIntervalSelector,\n    selectInterval => adjustsInterval(selectInterval)\n)\n","import {connect} from \"react-redux\";\nimport {Table} from \"./Table\";\nimport {\n    shiftDateIntervalFrom,\n    shiftDateIntervalLeft,\n    shiftDateIntervalNow,\n    shiftDateIntervalRight,\n} from '../../store/tableReducer'\nimport {\n    clearSelectedDays,\n    setApartmentId,\n    setEndSelection, setIsOpenModal,\n    setRentInterval,\n    setSelecting,\n    setStartSelection,\n} from '../../store/tableApartmentsReducer'\nimport {\n    getApartmentId,\n    getDaysInTable,\n    getInterval,\n    getIsSelect,\n    getSelectInterval\n} from '../../store/tableContainerSelectors'\nimport {getDays} from '../../store/tableBodyContainerSelectors'\n\n\nfunction mapStateToProps(state) {\n    return {\n        interval: getInterval(state),\n        daysInTable: getDaysInTable(state),\n        days: getDays(state),\n        // days: eachDayOfInterval(state.table.interval).map(day=>set(day, time)),\n        isSelect: getIsSelect(state),\n        selectInterval: getSelectInterval(state),\n        apartmentId: getApartmentId(state),\n    }\n}\n\nconst mapDispatchToProps = {\n    shiftDateIntervalLeft,\n    shiftDateIntervalRight,\n    shiftDateIntervalFrom,\n    shiftDateIntervalNow,\n    setSelecting,\n    setStartSelection,\n    setEndSelection,\n    setApartmentId,\n    clearSelectedDays,\n    setRentInterval,\n    setIsOpenModal,\n\n}\n\n\nexport const TableContainer = connect(mapStateToProps, mapDispatchToProps)(Table)","import React from 'react'\nimport {TableContainer} from '../Table/TableContainer'\nimport styled from 'styled-components'\nimport {border, MainBgColor} from '../../settings/settings'\n\n\nconst MainWrapper = styled.main`\n  grid-area: main;\n  border: ${border};\n  background: ${MainBgColor};\n  overflow-x: auto;\n`\n\nexport function Main(props) {\n\n    return <MainWrapper>\n        <TableContainer/>\n    </MainWrapper>\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {border, secondaryColor} from '../../settings/settings'\n\nconst FooterWrapper = styled.footer`\n  grid-area: footer;\n  border: ${border};\n  background: ${secondaryColor};\n`\n\nexport function Footer(props) {\n    return <FooterWrapper>Footer</FooterWrapper>\n}","import React from 'react'\nimport {Icon} from '../simpleElements/Icon'\nimport styled from 'styled-components'\nimport {borderMix, displayFlexAlignCenter, menuItemColor} from '../../settings/settings'\n\nconst MenuItemWrapper = styled.div`\n  ${displayFlexAlignCenter};\n  justify-content: flex-start;\n  border: ${borderMix( undefined,undefined,'#7693d5')} ;\n  border-radius: 2px;\n  background-color: ${menuItemColor};\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 2px 5px rgba(0,0,0,0.22);\n  padding: 8px 0;\n  margin: 0 2px;\n\n  :hover {\n    background-color: #87ee9d;\n    cursor: pointer;\n  }\n\n  :active {\n    box-shadow: inset 2px 2px 5px rgba(154, 147, 140, 0.5), 1px 1px 5px rgba(255, 255, 255, 1);\n  }\n`\n\nconst MenuItemIcon = styled(Icon)`\nmargin: 0 5px;\n`\n\nconst MenuItemTitle = styled.span`\nmargin-right: 5px;\n`\n\nexport function MenuItem(props) {\n    const {openModal, iconName, menuItemTitle, } = props\n\n    return (\n        <MenuItemWrapper onClick={openModal}>\n            <MenuItemIcon>{iconName}</MenuItemIcon>\n            {menuItemTitle && <MenuItemTitle>{menuItemTitle}</MenuItemTitle>}\n        </MenuItemWrapper>\n    )\n}","import {Field, Form, Formik} from 'formik'\nimport React from 'react'\nimport {Button} from '../simpleElements/Button'\nimport {SaveCloseButtons} from './SaveCloseButtons'\n\nexport const TableSettingsForm = (props) => {\n    const{daysInTable, changeDaysInTable, closeModal, } = props\n\n    const min = 29\n    const max = 366\n\n    return (\n        <Formik\n            initialValues={{daysInTable: daysInTable}}\n            onSubmit={(values) => {\n                changeDaysInTable(values.daysInTable)\n            }}\n        >\n            {({setFieldValue}) =>\n            <Form>\n                <label htmlFor=\"daysInTable\">Дней в сетке: </label>\n                <Field name=\"daysInTable\" type=\"number\" min={min} max={max} title={`мин: ${min}; макс: ${max}`} />\n                <Button type=\"button\"  onClick={() => setFieldValue('daysInTable', min)} size={'0.8em'}>Сбросить</Button>\n                <hr />\n                <SaveCloseButtons closeHandler={closeModal}/>\n            </Form>}\n        </ Formik>\n    )\n}","import {Field, Form, Formik} from 'formik'\nimport React, {Fragment} from 'react'\nimport {SaveCloseButtons} from './SaveCloseButtons'\nimport * as settings from '../../settings/settings'\nimport styled from 'styled-components'\n\n\nconst SettingsExample = styled.div`\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  background-color: ${props => props.background};\n  border: ${settings.border};\n  vertical-align: middle;\n`\n\nexport const CommonSettingsForm = (props) => {\n    const {closeModal,} = props\n\n    return (\n        <Formik\n            initialValues={settings}\n        >\n            <Form>\n                <h3>\n                    One fine day, the settings can still be changed through this form,\n                    but now they can be found in: 'src/settings/settings.js'\n                </h3>\n                {Object.keys(settings).map(item => {\n                    return (\n                        typeof settings[item] !== 'function' && <Fragment key={item}>\n                            <label htmlFor={item}>{item}</label>\n                            <Field name={item} type=\"text\" readOnly/>\n                            {item.includes('Color') && <SettingsExample  background={settings[item]}/> }\n                            <br/>\n                        </Fragment>\n                    )\n                })}\n\n                <SaveCloseButtons closeHandler={closeModal} notSave/>\n            </Form>\n        </ Formik>\n    )\n}","import React, {Component, Fragment} from 'react'\nimport Chart from \"react-apexcharts\";\nimport {SaveCloseButtons} from '../Forms/SaveCloseButtons'\n\n\nexport class Report extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateCharts = this.updateCharts.bind(this);\n\n        this.state = {\n            optionsMixedChart: {\n                chart: {\n                    id: \"basic-bar\",\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        columnWidth: \"50%\"\n                    }\n                },\n                stroke: {\n                    width: [4, 0, 0]\n                },\n                xaxis: {\n                    categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n                },\n                markers: {\n                    size: 6,\n                    strokeWidth: 3,\n                    fillOpacity: 0,\n                    strokeOpacity: 0,\n                    hover: {\n                        size: 8\n                    }\n                },\n                yaxis: {\n                    tickAmount: 5,\n                    min: 0,\n                    max: 100\n                }\n            },\n            seriesMixedChart: [\n                {\n                    name: \"series-1\",\n                    type: \"line\",\n                    data: [30, 40, 25, 50, 49, 21, 70, 51]\n                },\n                {\n                    name: \"series-2\",\n                    type: \"column\",\n                    data: [23, 12, 54, 61, 32, 56, 81, 19]\n                },\n                {\n                    name: \"series-3\",\n                    type: \"column\",\n                    data: [62, 12, 45, 55, 76, 41, 23, 43]\n                }\n            ],\n            optionsRadial: {\n                plotOptions: {\n                    radialBar: {\n                        startAngle: -135,\n                        endAngle: 225,\n                        hollow: {\n                            margin: 0,\n                            size: \"70%\",\n                            background: \"#fff\",\n                            image: undefined,\n                            imageOffsetX: 0,\n                            imageOffsetY: 0,\n                            position: \"front\",\n                            dropShadow: {\n                                enabled: true,\n                                top: 3,\n                                left: 0,\n                                blur: 4,\n                                opacity: 0.24\n                            }\n                        },\n                        track: {\n                            background: \"#fff\",\n                            strokeWidth: \"67%\",\n                            margin: 0, // margin is in pixels\n                            dropShadow: {\n                                enabled: true,\n                                top: -3,\n                                left: 0,\n                                blur: 4,\n                                opacity: 0.35\n                            }\n                        },\n\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                offsetY: -20,\n                                show: true,\n                                color: \"#888\",\n                                fontSize: \"13px\"\n                            },\n                            value: {\n                                formatter: function (val) {\n                                    return val;\n                                },\n                                color: \"#111\",\n                                fontSize: \"30px\",\n                                show: true\n                            }\n                        }\n                    }\n                },\n                fill: {\n                    type: \"gradient\",\n                    gradient: {\n                        shade: \"dark\",\n                        type: \"horizontal\",\n                        shadeIntensity: 0.5,\n                        gradientToColors: [\"#ABE5A1\"],\n                        inverseColors: true,\n                        opacityFrom: 1,\n                        opacityTo: 1,\n                        stops: [0, 100]\n                    }\n                },\n                stroke: {\n                    lineCap: \"round\"\n                },\n                labels: [\"Percent\"]\n            },\n            seriesRadial: [76],\n            optionsBar: {\n                chart: {\n                    stacked: true,\n                    stackType: \"100%\",\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                dataLabels: {\n                    dropShadow: {\n                        enabled: true\n                    }\n                },\n                stroke: {\n                    width: 0\n                },\n                xaxis: {\n                    categories: [\"Fav Color\"],\n                    labels: {\n                        show: false\n                    },\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false\n                    }\n                },\n                fill: {\n                    opacity: 1,\n                    type: \"gradient\",\n                    gradient: {\n                        shade: \"dark\",\n                        type: \"vertical\",\n                        shadeIntensity: 0.35,\n                        gradientToColors: undefined,\n                        inverseColors: false,\n                        opacityFrom: 0.85,\n                        opacityTo: 0.85,\n                        stops: [90, 0, 100]\n                    }\n                },\n\n                legend: {\n                    position: \"bottom\",\n                    horizontalAlign: \"right\"\n                }\n            },\n            seriesBar: [\n                {\n                    name: \"blue\",\n                    data: [32]\n                },\n                {\n                    name: \"green\",\n                    data: [41]\n                },\n                {\n                    name: \"yellow\",\n                    data: [12]\n                },\n                {\n                    name: \"red\",\n                    data: [65]\n                }\n            ]\n        };\n    }\n\n    updateCharts() {\n        const max = 90;\n        const min = 30;\n        const newMixedSeries = [];\n        const newBarSeries = [];\n\n        this.state.seriesMixedChart.forEach((s) => {\n            const data = s.data.map(() => {\n                return Math.floor(Math.random() * (max - min + 1)) + min;\n            });\n            newMixedSeries.push({ data: data, type: s.type });\n        });\n\n        this.state.seriesBar.forEach((s) => {\n            const data = s.data.map(() => {\n                return Math.floor(Math.random() * (180 - min + 1)) + min;\n            });\n            newBarSeries.push({ data, name: s.name });\n        });\n\n        this.setState({\n            seriesMixedChart: newMixedSeries,\n            seriesBar: newBarSeries,\n            seriesRadial: [Math.floor(Math.random() * (90 - 50 + 1)) + 50]\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <h1 style={{color: '#d90af1', textAlign: 'center'}}>Your big and powerful reports on everything!</h1>\n                <div className=\"app\">\n                    <div className=\"row\">\n                        <div className=\"col mixed-chart\">\n                            <Chart\n                                options={this.state.optionsMixedChart}\n                                series={this.state.seriesMixedChart}\n                                type=\"line\"\n                                width=\"500\"\n                            />\n                        </div>\n\n                        <div className=\"col radial-chart\">\n                            <Chart\n                                options={this.state.optionsRadial}\n                                series={this.state.seriesRadial}\n                                type=\"radialBar\"\n                                width=\"280\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col percentage-chart\">\n                            <Chart\n                                options={this.state.optionsBar}\n                                height={140}\n                                series={this.state.seriesBar}\n                                type=\"bar\"\n                                width={500}\n                            />\n                        </div>\n\n                        <p className=\"col\">\n                            <button onClick={this.updateCharts}>Update!</button>\n                        </p>\n                    </div>\n                </div>\n\n                <SaveCloseButtons closeHandler={this.props.closeModal} notSave/>\n            </>\n        )\n    }\n}","import React from 'react'\nimport {MenuItem} from './MenuItem'\nimport {TableSettingsForm} from '../Forms/TableSettingsForm'\nimport {withModal} from '../Modal/withModal'\nimport styled from 'styled-components'\nimport {border, displayFlexAlignCenter, secondaryColor} from '../../settings/settings'\nimport {Icon} from '../simpleElements/Icon'\nimport {CommonSettingsForm} from '../Forms/CommonSettingsForm'\nimport {Report} from './Reports'\n\n\nconst HeaderWrapper = styled.header`\n  grid-area: header;\n  border: ${border};\n  background: ${secondaryColor};\n  ${displayFlexAlignCenter};\n  justify-content: space-between;\n`\n\nconst LeftSideMenu = styled.div`\n  ${displayFlexAlignCenter};\n  justify-content: flex-start;\n`\n\nconst TableSettingsMenuItem = withModal(MenuItem)\n\nexport function Header(props) {\n    const {daysInTable, changeDaysInTable, } = props\n\n    return (\n        <HeaderWrapper>\n            <LeftSideMenu>\n                <Icon size={36}>hotel</Icon>\n                <TableSettingsMenuItem iconName={'grid_on'} menuItemTitle={'Сетка'}>\n                    <TableSettingsForm daysInTable={daysInTable} changeDaysInTable={changeDaysInTable}/>\n                </TableSettingsMenuItem>\n\n                <TableSettingsMenuItem iconName={'settings'} menuItemTitle={'Настройки'}>\n                    <CommonSettingsForm />\n                </TableSettingsMenuItem>\n\n                <TableSettingsMenuItem iconName={'format_list_bulleted'} menuItemTitle={'Отчеты'}>\n                    <Report />\n                </TableSettingsMenuItem>\n            </LeftSideMenu>\n\n            <div>\n                <MenuItem iconName={'account_box'} />\n            </div>\n        </HeaderWrapper>\n    )\n}","export const getDaysInTable = (state) => state.table.daysInTable\n","import {connect} from 'react-redux'\nimport {changeDaysInTable} from '../../store/tableReducer'\nimport {Header} from './Header'\nimport {getDaysInTable} from '../../store/headerContainerSelector'\n\nfunction mapStateToProps(state) {\n    return {\n        daysInTable: getDaysInTable(state),\n    }\n}\n\nexport const HeaderContainer = connect(mapStateToProps,    {changeDaysInTable})(Header)","import './App.css';\nimport {Main} from \"./components/Main/Main\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {HeaderContainer} from './components/Header/HeaderContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderContainer/>\n      <Main/>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport {tableReducer} from './tableReducer'\nimport {tableApartmentsReducer} from './tableApartmentsReducer'\nimport ReduxThunk from 'redux-thunk'\n\nlet reducers = combineReducers({\n    table: tableReducer,\n    tableApartments: tableApartmentsReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nexport let store = createStore(reducers,  composeEnhancers(applyMiddleware(ReduxThunk)))\n\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  \n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"SettingsMenuItem_Modal__1Ib8k\",\"Overlay\":\"SettingsMenuItem_Overlay__2EU91\"};"],"sourceRoot":""}